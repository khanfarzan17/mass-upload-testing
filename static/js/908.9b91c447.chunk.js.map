{"version":3,"file":"static/js/908.9b91c447.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/Loader/Loader.js","components/Modal/customModal.jsx","hooks/useToast.js","components/FileUploader/FileUploader.jsx","pages/mass-upload/validateFile.js","components/Select/customSelect.jsx","components/Alert/ReusableAlert.jsx","components/ErrorPopup/ErrorPopup.jsx","components/Modals/ContentErrorsModal.jsx","components/Modals/ConfirmationModal.jsx","components/bootsrap-table/Table.jsx","hooks/Mass-Upload/useMassUpload.js","pages/mass-upload/mappedList.jsx","components/Modals/ColumnMappingModal.jsx","pages/mass-upload/mapSheetData.js","pages/mass-upload/massUpload.jsx","utils/downloadTemplate.js","massuUploadIndex.js","services/api/PlantAssignment/fetchCsrfService.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CustomButton = ({\r\n  variant = \"primary\",\r\n  size = \"md\",\r\n  type = \"button\",\r\n  disabled = false,\r\n  onClick,\r\n  className = \"\",\r\n  title,\r\n  text,\r\n  imageSrc,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      size={size}\r\n      type={type}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      className={className}\r\n      title={title}\r\n      {...props}\r\n    >\r\n      {imageSrc && (\r\n        <img\r\n          src={imageSrc}\r\n          alt={text}\r\n          style={{ width: \"20px\", height: \"20px\", marginRight: \"5px\" }}\r\n        />\r\n      )}{\" \"}\r\n      {/* Render image if provided */}\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nCustomButton.propTypes = {\r\n  variant: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n  imageSrc: PropTypes.string, // PropType for image source\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from \"react\";\r\nimport \"./Loader.css\"; // Create a CSS file for custom styles\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst CustomModal = ({ show, onHide, title, children, footerButtons }) => {\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"lg\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title || \"Modal Title\"}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n      <Modal.Footer>\r\n        {footerButtons ? (\r\n          footerButtons.map((btn, index) => (\r\n            <Button\r\n              key={index}\r\n              variant={btn.variant || \"secondary\"}\r\n              onClick={btn.onClick}\r\n            >\r\n              {btn.label}\r\n            </Button>\r\n          ))\r\n        ) : (\r\n          <Button variant=\"secondary\" onClick={onHide}>\r\n            Close\r\n          </Button>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","// hooks/useToast.js\r\nimport { toast } from \"react-toastify\";\r\nimport { Bounce } from \"react-toastify\";\r\n\r\nconst useToast = () => {\r\n  const showToast = ({\r\n    message,\r\n    type = \"default\",\r\n    position = \"top-right\",\r\n    autoClose = 2000,\r\n    hideProgressBar = false,\r\n    closeOnClick = true,\r\n    pauseOnHover = false,\r\n    pauseOnFocusLoss= false,\r\n    draggable = true,\r\n    theme = \"light\",\r\n    transition = Bounce,\r\n    ...otherOptions\r\n  }) => {\r\n    const toastFunction = toast[type] || toast;\r\n\r\n    toastFunction(message, {\r\n      position,\r\n      autoClose,\r\n      hideProgressBar,\r\n      closeOnClick,\r\n      pauseOnHover,\r\n      draggable,\r\n      theme,\r\n      transition,\r\n      ...otherOptions,\r\n    });\r\n  };\r\n\r\n  const showSuccessToast = (message, options = {}) => {\r\n    showToast({ message, type: \"success\", ...options });\r\n  };\r\n\r\n  const showErrorToast = (message, options = {}) => {\r\n    showToast({ message, type: \"error\", ...options });\r\n  };\r\n\r\n  const showInfoToast = (message, options = {}) => {\r\n    showToast({ message, type: \"info\", ...options });\r\n  };\r\n\r\n  const showWarningToast = (message, options = {}) => {\r\n    showToast({ message, type: \"warn\", ...options });\r\n  };\r\n\r\n  return { showToast, showSuccessToast, showErrorToast, showInfoToast, showWarningToast };\r\n};\r\n\r\nexport default useToast;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport \"./FileUploader.css\";\r\nimport useToast from \"../../hooks/useToast\";\r\n\r\nconst FileUpload = forwardRef(\r\n  (\r\n    {\r\n      fileTypes = [\"JPEG\", \"PNG\", \"GIF\", \"XLSX\", \"CSV\"],\r\n      multiple = true,\r\n      onUpload,\r\n      onReset,\r\n      disabled = false,\r\n      message = \"Drag & Drop your files here or Click to browse\",\r\n    },\r\n    ref\r\n  ) => {\r\n    const [files, setFiles] = useState([]);\r\n    const { showErrorToast } = useToast();\r\n\r\n    // Expose handleClearFiles to parent through ref\r\n    useImperativeHandle(ref, () => ({\r\n      handleClearFiles: (skipSuccessToast = false) => {\r\n        setFiles([]);\r\n        if (onUpload) {\r\n          onUpload([]);\r\n        }\r\n        if (onReset) {\r\n          onReset(skipSuccessToast); // Pass skipSuccessToast parameter\r\n        }\r\n      },\r\n    }));\r\n\r\n    const handleChange = (selectedFiles) => {\r\n      const fileArray = multiple ? [...selectedFiles] : [selectedFiles];\r\n      setFiles(fileArray);\r\n\r\n      // Callback function to send files to parent component\r\n      if (onUpload) {\r\n        onUpload(fileArray);\r\n      }\r\n    };\r\n\r\n    const handleClearFile = () => {\r\n      ref.current.handleClearFiles(false); // Pass false to show success toast\r\n    };\r\n    // const handleDragOver = (event) => {\r\n    //   if (disabled) {\r\n    //     event.preventDefault();\r\n    //     event.stopPropagation();\r\n    //     showErrorToast(\"Please choose an operation from the drop-down first\");\r\n    //   } else {\r\n    //     // Allow drag-over behavior for valid file uploads\r\n    //     event.preventDefault();\r\n    //     event.dataTransfer.dropEffect = \"copy\";\r\n    //   }\r\n    // };\r\n\r\n    return (\r\n      <div\r\n        className={`file-upload-container ${disabled ? \"disabled\" : \"\"}`}\r\n        // onDragOver={handleDragOver}\r\n      >\r\n        <h2>\r\n          {disabled ? \"Please select an operation first\" : \"Drag & Drop Files\"}\r\n        </h2>\r\n        <div className=\"upload-area\">\r\n          <FileUploader\r\n            multiple={multiple}\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n            disabled={disabled}\r\n            hoverTitle={disabled ? \"\" : \"Drop here\"}\r\n          />\r\n          <div className=\"file-list\">\r\n            {files.length > 0 ? (\r\n              files.map((file, index) => (\r\n                <div\r\n                  className=\"mb-4\"\r\n                  key={index}\r\n                  style={{ display: \"flex\", alignItems: \"center\" }}\r\n                >\r\n                  <p className=\"me-2 mb-0\">📁 {file.name}</p>\r\n                  <button\r\n                    onClick={handleClearFile}\r\n                    style={{\r\n                      background: \"none\",\r\n                      border: \"none\",\r\n                      cursor: disabled ? \"not-allowed\" : \"pointer\",\r\n                      color: \"red\",\r\n                      opacity: disabled ? 0.5 : 1,\r\n                    }}\r\n                    disabled={disabled}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>{message}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default FileUpload;\r\n","import * as XLSX from \"xlsx\";\r\nimport config from \"./config.json\";\r\n\r\nconst processDataInChunks = (data, chunkSize = 1000) => {\r\n  const chunks = [];\r\n  for (let i = 0; i < data.length; i += chunkSize) {\r\n    chunks.push(data.slice(i, i + chunkSize));\r\n  }\r\n  return chunks;\r\n};\r\n\r\nconst validateFile = (file, collabSpaceTitles, selectedOperation) => {\r\n  return new Promise((resolve, reject) => {\r\n    console.log(\"🔍 Starting template validation...\");\r\n    console.log({\r\n      operation: selectedOperation,\r\n      fileName: file.name\r\n    });\r\n\r\n    const operationNames = {\r\n      1: \"Physical Product\",\r\n      2: \"Physical Product Structure\",\r\n      3: \"Document\",\r\n      4: \"Physical Product-Document\",\r\n    };\r\n\r\n    const matchedOperation = operationNames[selectedOperation];\r\n    const expectedHeaders = config.MassUpload[matchedOperation]?.fileHeaders || [];\r\n    const mandatoryAttributes = config.MassUpload[matchedOperation]?.mandatoryAttributes || [];\r\n\r\n    if (!selectedOperation) {\r\n      reject({\r\n        errors: [\"Please select an operation first.\"],\r\n        headers: [],\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!Array.isArray(collabSpaceTitles)) {\r\n      console.error(\"❌ Invalid Collaborative Space list\");\r\n      reject({\r\n        errors: [\"Internal error: Invalid Collaborative Space list.\"],\r\n        headers: [],\r\n      });\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsBinaryString(file);\r\n\r\n    reader.onload = async (e) => {\r\n      const workbook = XLSX.read(e.target.result, { type: \"binary\" });\r\n      const sheetName = workbook.SheetNames[0];\r\n      const worksheet = workbook.Sheets[sheetName];\r\n      const uploadedHeaders = XLSX.utils.sheet_to_json(worksheet, { header: 1 })[0] || [];\r\n\r\n      // Template header validation\r\n      const headerMismatch = !expectedHeaders.every((header) =>\r\n        uploadedHeaders.includes(header)\r\n      );\r\n\r\n      if (headerMismatch) {\r\n        console.error(\"❌ Template mismatch detected!\");\r\n        reject({\r\n          isTemplateMismatch: true,\r\n          errors: [\"The template uploaded does not match the selected operation.\"],\r\n          headers: uploadedHeaders,\r\n        });\r\n        return;\r\n      }\r\n\r\n      const headers = XLSX.utils.sheet_to_json(worksheet, { header: 1 })[0] || [];\r\n      \r\n      if (!headers || headers.length === 0) {\r\n        reject({\r\n          errors: [\"The uploaded file has no content or is empty.\"],\r\n          headers: [],\r\n        });\r\n        return;\r\n      }\r\n\r\n      const allSheetData = XLSX.utils.sheet_to_json(worksheet, { defval: \"\" });\r\n      \r\n      if (allSheetData.length === 0) {\r\n        reject({\r\n          errors: [\"The uploaded file contains headers but no data rows.\"],\r\n          headers,\r\n        });\r\n        return;\r\n      }\r\n\r\n      const chunks = processDataInChunks(allSheetData, 1000);\r\n      const validationErrors = [];\r\n      const invalidPrefixes = [\"MMI-\", \"RS-\", \"DAN-\", \"RSC-\", \"TF-\", \"ROXA-\"];\r\n\r\n      // Error counters\r\n      let errorStats = {\r\n        mandatory: 0,\r\n        collabSpace: 0,\r\n        einPrefix: 0,\r\n        docPrefix: 0\r\n      };\r\n\r\n      for (let chunkIndex = 0; chunkIndex < chunks.length; chunkIndex++) {\r\n        const chunk = chunks[chunkIndex];\r\n        const progress = Math.round(((chunkIndex + 1) / chunks.length) * 100);\r\n\r\n        chunk.forEach((row, indexInChunk) => {\r\n          const globalRowIndex = chunkIndex * 1000 + indexInChunk;\r\n\r\n          // Mandatory fields validation\r\n          mandatoryAttributes.forEach((field) => {\r\n            if (!row[field] || row[field].toString().trim() === \"\") {\r\n              errorStats.mandatory++;\r\n              validationErrors.push(\r\n                `Row ${globalRowIndex + 2}: \"${field}\" is required but is empty`\r\n              );\r\n            }\r\n          });\r\n\r\n          // Collaborative Space validation\r\n          if (\r\n            matchedOperation === \"Physical Product\" ||\r\n            matchedOperation === \"Document\"\r\n          ) {\r\n            const userCollabSpace = row[\"Collaborative Space\"]?.trim() || \"\";\r\n            if (!userCollabSpace || !collabSpaceTitles.includes(userCollabSpace)) {\r\n              errorStats.collabSpace++;\r\n              validationErrors.push(\r\n                `Row ${globalRowIndex + 2}: \"${\r\n                  userCollabSpace\r\n                    ? `You are not allowed to create in \"Collaborative Space -\" (${userCollabSpace})`\r\n                    : 'Collaborative Space\" is Missing or Empty'\r\n                }`\r\n              );\r\n            }\r\n          }\r\n\r\n          // EIN Number / Document Name validation\r\n          let valueToValidate = null;\r\n          let columnName = \"\";\r\n\r\n          if (\r\n            matchedOperation === \"Physical Product\" ||\r\n            matchedOperation === \"Physical Product Structure\"\r\n          ) {\r\n            columnName = \"EIN Number\";\r\n            valueToValidate = row[columnName]?.toString().trim() || null;\r\n            if (valueToValidate && invalidPrefixes.some(prefix => valueToValidate.startsWith(prefix))) {\r\n              errorStats.einPrefix++;\r\n              validationErrors.push(\r\n                `Row ${globalRowIndex + 2}: \"EIN Number\" value \"${valueToValidate}\" has an invalid prefix.`\r\n              );\r\n            }\r\n          } else if (\r\n            matchedOperation === \"Physical Product-Document\" ||\r\n            matchedOperation === \"Document\"\r\n          ) {\r\n            columnName = \"Document Name\";\r\n            valueToValidate = row[columnName]?.toString().trim() || null;\r\n            if (valueToValidate && invalidPrefixes.some(prefix => valueToValidate.startsWith(prefix))) {\r\n              errorStats.docPrefix++;\r\n              validationErrors.push(\r\n                `Row ${globalRowIndex + 2}: \"Document Name\" value \"${valueToValidate}\" has an invalid prefix.`\r\n              );\r\n            }\r\n          }\r\n        });\r\n\r\n        // Log only at 25% intervals\r\n        if (progress % 25 === 0) {\r\n          console.log(`Processing: ${progress}% complete`, {\r\n            processedRows: (chunkIndex + 1) * 1000,\r\n            totalRows: allSheetData.length,\r\n            currentErrors: {\r\n              mandatory: errorStats.mandatory,\r\n              collaborativeSpace: errorStats.collabSpace,\r\n              einPrefix: errorStats.einPrefix,\r\n              documentPrefix: errorStats.docPrefix,\r\n              total: validationErrors.length\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if (validationErrors.length > 0) {\r\n        console.log(\"❌ Validation completed with errors:\", {\r\n          total: validationErrors.length,\r\n          byType: errorStats\r\n        });\r\n        reject({\r\n          errors: validationErrors,\r\n          headers,\r\n          mandatoryAttributes,\r\n        });\r\n        return;\r\n      }\r\n\r\n      console.log(\"✅ Validation completed successfully\");\r\n      resolve({\r\n        headers,\r\n        sheetData: allSheetData,\r\n        validationErrors: [],\r\n        mandatoryAttributes,\r\n      });\r\n    };\r\n\r\n    reader.onerror = () => {\r\n      console.error(\"❌ Error reading file\");\r\n      reject({\r\n        errors: [\"File reading failed.\"],\r\n        headers: [],\r\n        isTemplateMismatch: false,\r\n      });\r\n    };\r\n  });\r\n};\r\n\r\nexport default validateFile;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./customSelect.css\";\r\n\r\nconst CustomSelect = ({\r\n  index,\r\n  selectedValue,\r\n  options,\r\n  onChange,\r\n  size,\r\n  className,\r\n}) => {\r\n  const handleChange = (e) => {\r\n    // If index is provided use it, otherwise just pass the value\r\n    if (index !== undefined) {\r\n      onChange(index, e.target.value);\r\n    } else {\r\n      onChange(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form.Select\r\n      aria-label=\"Attribute selection\"\r\n      value={selectedValue || \"\"}\r\n      onChange={handleChange}\r\n      size={size}\r\n      className={className}\r\n    >\r\n      <option value=\"\">{options.defaultLabel}</option> {/* Default option */}\r\n      {options.list.map((option, attrIndex) => (\r\n        <option key={attrIndex} value={option.value}>\r\n          {option.label}\r\n        </option>\r\n      ))}\r\n    </Form.Select>\r\n  );\r\n};\r\n\r\nexport default CustomSelect;\r\n","import React from \"react\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nconst ReusableAlert = ({\r\n  variant = \"info\",\r\n  message,\r\n  show = true,\r\n  className = \"\",\r\n}) => {\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <Alert variant={variant} className={className}>\r\n      {typeof message === \"string\" ? message : message}\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default ReusableAlert;\r\n","import React, { useMemo } from \"react\";\r\nimport { AutoSizer, List, CellMeasurer, CellMeasurerCache } from \"react-virtualized\";\r\nimport \"./ErrorPopup.css\";\r\nimport ReusableAlert from \"../Alert/ReusableAlert\";\r\n\r\nconst ErrorPopup = ({ errors }) => {\r\n  console.log(`[ErrorPopup.jsx] errors:`, errors);\r\n\r\n  const processedErrors = useMemo(() => {\r\n    // Group errors by row number\r\n    const errorGroups = errors.reduce((groups, error) => {\r\n      const rowMatch = error.match(/Row (\\d+):/);\r\n      const columnMatch = error.match(/\"([^\"]*)\" (?:is required|value)/);\r\n      const errorMsg = error.split(\": \").slice(1).join(\": \");\r\n\r\n      const rowNumber = rowMatch ? rowMatch[1] : \"N/A\";\r\n      const columnName = columnMatch\r\n        ? columnMatch[1]\r\n        : error.includes(\"Collaborative Space\")\r\n        ? \"Collaborative Space\"\r\n        : \"N/A\";\r\n\r\n      if (!groups[rowNumber]) {\r\n        groups[rowNumber] = {\r\n          rowNumber,\r\n          columns: [],\r\n          errors: [],\r\n        };\r\n      }\r\n\r\n      groups[rowNumber].columns.push(columnName);\r\n      groups[rowNumber].errors.push(errorMsg || error);\r\n\r\n      return groups;\r\n    }, {});\r\n\r\n    // Convert groups to array and sort by row number\r\n    return Object.values(errorGroups).sort(\r\n      (a, b) => Number(a.rowNumber) - Number(b.rowNumber)\r\n    );\r\n  }, [errors]);\r\n\r\n  const cache = new CellMeasurerCache({\r\n    fixedWidth: true,\r\n    defaultHeight: 50,\r\n  });\r\n\r\n  const rowRenderer = ({ key, index, style, parent }) => {\r\n    const error = processedErrors[index];\r\n    return (\r\n      <CellMeasurer\r\n        key={key}\r\n        cache={cache}\r\n        columnIndex={0}\r\n        rowIndex={index}\r\n        parent={parent}\r\n      >\r\n        <div\r\n          style={style}\r\n          className=\"table-row\"\r\n        >\r\n          <div className=\"table-cell\" style={{ width: \"15%\" }}>\r\n            {error.rowNumber}\r\n          </div>\r\n          <div className=\"table-cell\" style={{ width: \"25%\" }}>\r\n            {error.columns.map((column, i) => (\r\n              <div key={i}>{column}</div>\r\n            ))}\r\n          </div>\r\n          <div className=\"table-cell\" style={{ width: \"60%\" }}>\r\n            <ul className=\"error-list\">\r\n              {error.errors.map((err, i) => (\r\n                <li key={i}>{err}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </CellMeasurer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"error-popup-container\">\r\n      <ReusableAlert\r\n        variant=\"danger\"\r\n        message={\r\n          <>\r\n            <strong>⚠️ Note:</strong> Below reports show only uploaded\r\n            spreadsheet error rows. To resolve these issues, update the\r\n            spreadsheet and re-import. ({processedErrors.length} errors found)\r\n          </>\r\n        }\r\n        className=\"custom-alert\"\r\n      />\r\n\r\n      <div className=\"table-wrapper\"> \r\n        {/* Static Header */}\r\n        <div className=\"static-header\">\r\n          <div className=\"header-cell\" style={{ width: \"15%\" }}>\r\n            Row Number\r\n          </div>\r\n          <div className=\"header-cell\" style={{ width: \"25%\" }}>\r\n            Column Name\r\n          </div>\r\n          <div className=\"header-cell\" style={{ width: \"60%\" }}>\r\n            Error Description\r\n          </div>\r\n        </div>\r\n\r\n        {/* Virtualized Error List */}\r\n        <div className=\"table-container\">\r\n          <AutoSizer>\r\n            {({ height, width }) => (\r\n              <List\r\n                width={width}\r\n                height={height}\r\n                rowCount={processedErrors.length}\r\n                rowHeight={cache.rowHeight}\r\n                deferredMeasurementCache={cache}\r\n                rowRenderer={rowRenderer}\r\n              />\r\n            )}\r\n          </AutoSizer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorPopup;","// ContentErrorsModal.jsx\r\nimport React from \"react\";\r\nimport CustomModal from \"../../components/Modal/customModal\";\r\nimport ErrorPopup from \"../../components/ErrorPopup/ErrorPopup\";\r\n\r\nconst ContentErrorsModal = ({ show, onHide, errors }) => {\r\n  console.log(`[ContentErrorsModal.jsx] errors:`, errors);\r\n  return (\r\n    <CustomModal\r\n      show={show}\r\n      onHide={onHide}\r\n      title=\"Content Errors\"\r\n      footerButtons={[\r\n        {\r\n          label: \"Close\",\r\n          variant: \"danger\",\r\n          onClick: onHide,\r\n        },\r\n      ]}\r\n    >\r\n      <ErrorPopup errors={errors} />\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default ContentErrorsModal;\r\n","// ConfirmationModal.jsx\r\nimport React from \"react\";\r\nimport CustomModal from \"../../components/Modal/customModal\";\r\n\r\nconst ConfirmationModal = ({ show, onHide, onConfirm }) => {\r\n  return (\r\n    <CustomModal\r\n      show={show}\r\n      onHide={onHide}\r\n      title=\"Confirmation\"\r\n      footerButtons={[\r\n        {\r\n          label: \"Cancel\",\r\n          variant: \"danger\",\r\n          onClick: onHide,\r\n        },\r\n        {\r\n          label: \"Confirm\",\r\n          variant: \"success\",\r\n          onClick: onConfirm,\r\n        },\r\n      ]}\r\n    >\r\n      <p>Are you sure you want to submit?</p>\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport CustomSelect from \"../Select/customSelect\";\r\nimport \"./staticTable.css\";\r\n\r\nconst StaticTable = ({\r\n  columnHeaders,\r\n  handleCheckboxChange,\r\n  checkedItems,\r\n  handleSelectChange,\r\n  selectedAttributes,\r\n  mappedAttributes, // Passed mapped attributes\r\n  mandatoryAttributes,\r\n}) => {\r\n  const { allNLSValues = [], dropdownOptions = [] } = mappedAttributes || {};\r\n\r\n  console.log(\"Mapped Attributes prop:\", mappedAttributes);\r\n  console.log(\"columnHeaders\", columnHeaders);\r\n  console.log(\"static table recieved manditory Attribute\", mandatoryAttributes);\r\n  console.log(\"Dropdown Options :\", dropdownOptions);\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"Debug NLS matches:\");\r\n    console.log(\"All NLS Values:\", allNLSValues);\r\n    columnHeaders.forEach((header) => {\r\n      console.log(`Checking header: \"${header}\"`);\r\n      console.log(\r\n        `Available NLS matches:`,\r\n        allNLSValues.filter(\r\n          (nls) => nls.toLowerCase().trim() === header.toLowerCase().trim()\r\n        )\r\n      );\r\n    });\r\n  }, [allNLSValues, columnHeaders]);\r\n\r\n  const headerMappings = {\r\n    \"release phase\": \"phase\",\r\n    \"long description\": \"description\",\r\n    // Add more mappings as needed\r\n  };\r\n\r\n  const hasMatchingNLS = (header) => {\r\n    if (!Array.isArray(allNLSValues)) {\r\n      console.warn(\"allNLSValues is not an array:\", allNLSValues);\r\n      return false;\r\n    }\r\n\r\n    const normalizedHeader = header.toLowerCase().trim();\r\n\r\n    // First try direct matching\r\n    const directMatch = allNLSValues.some(\r\n      (nls) => nls.toLowerCase().trim() === normalizedHeader\r\n    );\r\n\r\n    if (directMatch) return true;\r\n\r\n    // Try matching using the mapping dictionary\r\n    const mappedValue = headerMappings[normalizedHeader];\r\n    if (mappedValue) {\r\n      const mappedMatch = allNLSValues.some((nls) =>\r\n        nls.toLowerCase().trim().includes(mappedValue)\r\n      );\r\n      if (mappedMatch) {\r\n        console.log(\r\n          `Header \"${header}\" matched via mapping to \"${mappedValue}\"`\r\n        );\r\n        return true;\r\n      }\r\n    }\r\n\r\n    // Try partial matching as a last resort\r\n    const partialMatch = allNLSValues.some((nls) => {\r\n      const normalizedNLS = nls.toLowerCase().trim();\r\n      return (\r\n        normalizedHeader.includes(normalizedNLS) ||\r\n        normalizedNLS.includes(normalizedHeader)\r\n      );\r\n    });\r\n\r\n    return partialMatch;\r\n  };\r\n\r\n  return (\r\n    <Table bordered className=\"table-light \">\r\n      <thead>\r\n        <tr>\r\n          <th className=\"header-styling\"> Column Name</th>\r\n          <th className=\"header-styling\">Attribute Name</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {columnHeaders.map((header, index) => {\r\n          const isMandatory = mandatoryAttributes.includes(header);\r\n          const hasNLS = hasMatchingNLS(header);\r\n          // Log the state of each row\r\n          console.log(`Row ${index}:`, {\r\n            header,\r\n            hasNLS,\r\n            isMandatory,\r\n            defaultLabel: hasNLS ? header : \"\",\r\n          });\r\n          return (\r\n            <tr key={index}>\r\n              <td>{header}</td>\r\n              <td>\r\n                <CustomSelect\r\n                  index={index}\r\n                  selectedValue={selectedAttributes[index] || header}\r\n                  onChange={handleSelectChange}\r\n                  size=\"lg\"\r\n                  className=\"w-100\"\r\n                  disabled={!hasNLS}\r\n                  options={{\r\n                    defaultLabel: hasNLS\r\n                      ? header\r\n                      : \"Please select from Drop Down\", // Show header only if NLS matches\r\n                    list: dropdownOptions.map((attr) => ({\r\n                      // Always show all mapped attributes\r\n                      value: attr.backendName,\r\n                      label: attr.uiLabel,\r\n                    })),\r\n                  }}\r\n                />\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default StaticTable;\r\n","import { MSG_FETCH_CSRF_HEADERS_FAILED } from \"../../utils/toastMessages\";\r\nimport useToast from \"../useToast\";\r\nimport { fetchCsrfToken } from \"../../services/api/PlantAssignment/fetchCsrfService\";\r\nimport { callEnoviaWebService, fetchData } from \"../../utils/helpers\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useMassUpload = () => {\r\n  const { showErrorToast } = useToast();\r\n  const [mappedAttributes, setMappedAttributes] = useState([]);\r\n  const ENOVIA_BASE_URL = process.env.REACT_APP_ENOVIA_BASE_URL;\r\n\r\n  // Function to Fetch Spreadsheet Column Mapping\r\n  const fetchColumnMapping = async () => {\r\n    try {\r\n      console.log(\"Fetching column mapping...\");\r\n\r\n      // Get CSRF Headers\r\n      const headers = await fetchCsrfToken();\r\n      if (!headers) {\r\n        showErrorToast(MSG_FETCH_CSRF_HEADERS_FAILED);\r\n        return;\r\n      }\r\n\r\n      // 🔹 Step 1: Call API 1 (GET) to Fetch Metadata\r\n      const metadataResponse = await callEnoviaWebService(\r\n        \"GET\",\r\n        `${ENOVIA_BASE_URL}/resources/v1/modeler/dseng/dseng:EngItem/search?%24top=1`,\r\n        \"\",\r\n        headers\r\n      );\r\n\r\n      if (!metadataResponse || !metadataResponse.output) {\r\n        throw new Error(\"Failed to fetch metadata.\");\r\n      }\r\n      console.log(\"Metadata Member:\", metadataResponse.output.member);\r\n\r\n      const objectId = metadataResponse.output?.member?.[0]?.id;\r\n      if (!objectId) {\r\n        throw new Error(\"No object ID found in metadata.\");\r\n      }\r\n\r\n      console.log(\"Extracted Object ID:\", objectId);\r\n\r\n      // 🔹 Step 2: Call API 2 (POST) to Fetch Attributes\r\n      const attributeResponse = await callEnoviaWebService(\r\n        \"POST\",\r\n        `${ENOVIA_BASE_URL}/resources/v1/collabServices/attributes/op/read?tenant=OI000186152&xrequestedwith=xmlhttprequest`,\r\n        {\r\n          busIDs: [objectId],\r\n        },\r\n        headers\r\n      );\r\n\r\n      if (!attributeResponse || !attributeResponse.output) {\r\n        throw new Error(\"Failed to fetch attribute data.\");\r\n      }\r\n      console.log(\"Attribute Response:\", attributeResponse.output);\r\n\r\n      // 🔹 Step 3: Extract & Map Relevant Attributes\r\n\r\n      const groupData = attributeResponse.output.results?.[0]?.groupData || [];\r\n      console.log(\r\n        \"Full Group Data (with all NLS values):\",\r\n        groupData.map((item) => item.nls)\r\n      );\r\n\r\n      // Store all NLS values from groupData for header matching\r\n      const allNLSValues = groupData.map((item) => item.nls);\r\n\r\n      const relevantAttributes =\r\n        attributeResponse.output.results?.[0]?.groupData?.filter(\r\n          (attr) => attr.deploymentExtension === true\r\n        ) || [];\r\n\r\n      // const relevantAttributes = groupData.filter(\r\n      //   (attr) => attr.deploymentExtension === true\r\n      // );\r\n\r\n      const mappedData = relevantAttributes.map((attr) => ({\r\n        uiLabel: attr.nls, // UI Display Name\r\n        backendName: attr.name, // Backend Name\r\n      }));\r\n\r\n      console.log(\"Mapped Attributes:\", mappedData);\r\n      console.log(\"All available NLS values:\", allNLSValues);\r\n      console.log(\"Mapped Attributes (for dropdown):\", mappedData);\r\n      setMappedAttributes({\r\n        allNLSValues: groupData.map((item) => item.nls),\r\n        dropdownOptions: mappedData,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching column mapping:\", error);\r\n      showErrorToast(error.message || \"Error fetching column mapping.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchColumnMapping();\r\n  }, []);\r\n\r\n  return { mappedAttributes };\r\n};\r\n\r\nexport default useMassUpload;\r\n","import React, { useState, useEffect } from \"react\"; // Corrected import for useState\r\nimport StaticTable from \"../../components/bootsrap-table/Table\";\r\nimport useMassUpload from \"../../hooks/Mass-Upload/useMassUpload\";\r\n\r\nconst MappedList = ({ columnHeaders, mandatoryAttributes }) => {\r\n  console.log(\"MappedList - Received columnHeaders:\", columnHeaders);\r\n  console.log(\r\n    \"MappedList - Received mandatoryAttributes:\",\r\n    mandatoryAttributes\r\n  );\r\n  const { mappedAttributes } = useMassUpload();\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [selectedAttributes, setSelectedAttributes] = useState({});\r\n  const [filterMappedAttributes, setfilterMappedAttributes] = useState({\r\n    allNLSValues: [],\r\n    dropdownOptions: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(mappedAttributes)) {\r\n      console.log(\"Filtered mapped attributes:\", mappedAttributes);\r\n      setfilterMappedAttributes({\r\n        allNLSValues: mappedAttributes.map((attr) => attr.uiLabel),\r\n        dropdownOptions: mappedAttributes,\r\n      });\r\n    }\r\n  }, [mappedAttributes]);\r\n\r\n  const handleCheckboxChange = (index) => {\r\n    setCheckedItems({ ...checkedItems, [index]: !checkedItems[index] });\r\n  };\r\n  const handleSelectChange = (index, selectedValue) => {\r\n    setSelectedAttributes({ ...selectedAttributes, [index]: selectedValue });\r\n  };\r\n\r\n  return (\r\n    <StaticTable\r\n      columnHeaders={columnHeaders}\r\n      handleCheckboxChange={handleCheckboxChange}\r\n      checkedItems={checkedItems}\r\n      handleSelectChange={handleSelectChange}\r\n      selectedAttributes={selectedAttributes}\r\n      mappedAttributes={mappedAttributes}\r\n      mandatoryAttributes={mandatoryAttributes}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MappedList;\r\n","// ColumnMappingModal.jsx\r\nimport React from \"react\";\r\nimport CustomModal from \"../../components/Modal/customModal\";\r\nimport ReusableAlert from \"../../components/Alert/ReusableAlert\";\r\nimport MappedList from \"../../pages/mass-upload/mappedList\";\r\n\r\nconst ColumnMappingModal = ({\r\n  show,\r\n  onHide,\r\n  columnHeaders,\r\n  mandatoryAttributes,\r\n}) => {\r\n  const errorMessage = (\r\n    <>\r\n      <strong>⚠️Note:</strong> All column(s) of uploaded Spreadsheet are mapped\r\n      to valid Attribute Name. All mandatory Attribute Name is mapped to\r\n      uploaded Spreadsheet Column Name.\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <CustomModal\r\n      show={show}\r\n      onHide={onHide}\r\n      title=\"Manage Spreadsheet Columns\"\r\n      footerButtons={[\r\n        {\r\n          label: \"Ok\",\r\n          variant: \"primary\",\r\n          onClick: onHide,\r\n        },\r\n        {\r\n          label: \"Cancel\",\r\n          variant: \"danger\",\r\n          onClick: onHide,\r\n        },\r\n      ]}\r\n    >\r\n      <ReusableAlert\r\n        variant=\"info\"\r\n        message={errorMessage}\r\n        className=\"mapped-popup-alert\"\r\n      />\r\n      <MappedList\r\n        columnHeaders={columnHeaders}\r\n        mandatoryAttributes={mandatoryAttributes}\r\n      />\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default ColumnMappingModal;\r\n","const OPERATION_TYPES = {\r\n  PHYSICAL_PRODUCT: \"1\",\r\n  PRODUCT_STRUCTURE: \"2\",\r\n  DOCUMENT: \"3\",\r\n  PRODUCT_DOCUMENT: \"4\",\r\n};\r\n\r\nconst mappers = {\r\n  // Physical Product/Raw Material mapper\r\n  [OPERATION_TYPES.PHYSICAL_PRODUCT]: (row) => {\r\n    // Get the value and convert to lowercase for case-insensitive comparison\r\n    const productType =\r\n      row[\"Physical product/Raw Material\"]?.toLowerCase()?.trim() || \"\";\r\n\r\n    // Debug the incoming value\r\n    console.log(\"Raw value from Excel:\", row[\"Physical Product/Raw Material\"]);\r\n\r\n    let type;\r\n    if (productType.includes(\"physical product\")) {\r\n      type = \"VPMReference\";\r\n    } else if (productType.includes(\"raw material\")) {\r\n      type = \"Raw_Material\";\r\n    } else {\r\n      type = \"\"; // Default empty if neither matches\r\n    }\r\n\r\n    // Debug the mapping\r\n    console.log(`Product Type: \"${productType}\" -> Mapped to: \"${type}\"`);\r\n\r\n    return {\r\n      type,\r\n      title: row[\"Title\"] || \"\",\r\n      attributes: {\r\n        description: row[\"Description\"] || \"\",\r\n        path: row[\"Item Catalog Category\"] || \"\",\r\n        \"dseno:EnterpriseAttributes\": {\r\n          \"XP_VPMReference_Ext.EMR_ERP_PrimaryUOM\":\r\n            row[\"Unit Of Measure\"] || row[\"Unit of Measure\"] || \"\",\r\n        },\r\n        \"dseng:EnterpriseReference\": {\r\n          partNumber: row[\"EIN Number\"] || \"\",\r\n        },\r\n      },\r\n      classificationType: row[\"Type\"] || \"\",\r\n      collabspace: row[\"Collaborative Space\"] || row[\"Collabspace\"] || \"\",\r\n    };\r\n  },\r\n\r\n  // Product Structure mapper\r\n  [OPERATION_TYPES.PRODUCT_STRUCTURE]: (row) => ({\r\n    parentId: row[\"Parent EIN\"] || \"\",\r\n    childId: row[\"Child EIN\"] || \"\",\r\n    relationshipType: \"Product Structure\",\r\n    attributes: {\r\n      quantity: row[\"Quantity\"] || \"1\",\r\n      unit: row[\"Unit\"] || \"Each\",\r\n    },\r\n  }),\r\n\r\n  // Document mapper\r\n  [OPERATION_TYPES.DOCUMENT]: (row) => ({\r\n    type: \"Document\",\r\n    title: row[\"Document Name\"] || \"\",\r\n    attributes: {\r\n      description: row[\"Description\"] || \"\",\r\n      \"document:attributes\": {\r\n        documentType: row[\"Document Type\"] || \"\",\r\n        revision: row[\"Revision\"] || \"\",\r\n      },\r\n    },\r\n    collabspace: row[\"Collaborative Space\"] || row[\"Collabspace\"] || \"\",\r\n  }),\r\n\r\n  // Product-Document mapper\r\n  [OPERATION_TYPES.PRODUCT_DOCUMENT]: (row) => ({\r\n    productId: row[\"Product EIN\"] || \"\",\r\n    documentId: row[\"Document Name\"] || \"\",\r\n    relationshipType: row[\"Relationship Type\"] || \"Reference\",\r\n  }),\r\n};\r\n\r\nconst processInChunks = (items, chunkSize = 1000) => {\r\n  const chunks = [];\r\n  for (let i = 0; i < items.length; i += chunkSize) {\r\n    chunks.push(items.slice(i, i + chunkSize));\r\n  }\r\n  return chunks;\r\n};\r\n\r\nconst mapsheetData = (sheetData, operationType, chunkSize = 1000) => {\r\n  if (!Array.isArray(sheetData) || sheetData.length === 0) {\r\n    return { items: [], chunks: [], totalItems: 0, totalChunks: 0 };\r\n  }\r\n\r\n  // Add debug logging\r\n  console.log(\"Raw Sheet Data:\", sheetData);\r\n  console.log(\"Operation Type:\", operationType);\r\n\r\n  const mapper = mappers[operationType];\r\n  if (!mapper) {\r\n    console.error(`No mapper found for operation type: ${operationType}`);\r\n    return { items: [], chunks: [], totalItems: 0, totalChunks: 0 };\r\n  }\r\n\r\n  const items = sheetData.map((row, index) => {\r\n    const mappedItem = mapper(row);\r\n    console.log(`Mapped item ${index}:`, mappedItem);\r\n    return mappedItem;\r\n  });\r\n\r\n  const chunks = processInChunks(items, chunkSize);\r\n\r\n  const result = {\r\n    items,\r\n    chunks,\r\n    totalItems: items.length,\r\n    totalChunks: chunks.length,\r\n  };\r\n\r\n  console.log(\"Final mapped data:\", result);\r\n  return result;\r\n};\r\n\r\nexport default mapsheetData;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Mockup.css\";\r\nimport { Form, Stack } from \"react-bootstrap\";\r\nimport CustomButton from \"../../components/Button/Button\";\r\nimport FileUpload from \"../../components/FileUploader/FileUploader\";\r\nimport { downloadTemplate } from \"../../utils/downloadTemplate\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport validateFile from \"./validateFile\";\r\nimport CustomSelect from \"../../components/Select/customSelect\";\r\nimport { globalCollabSpaceTitles } from \"../../services/api/droppableService\";\r\nimport ContentErrorsModal from \"../../components/Modals/ContentErrorsModal\";\r\nimport ConfirmationModal from \"../../components/Modals/ConfirmationModal\";\r\nimport ColumnMappingModal from \"../../components/Modals/ColumnMappingModal\";\r\nimport mapsheetData from \"./mapSheetData\";\r\nimport api from \"../../utils/api\";\r\n\r\nconst API_ENDPOINTS = {\r\n  1: \"/massUpload/uploadPhysicalProduct\",\r\n  2: \"/massUpload/uploadProductStructure\",\r\n  3: \"/massUpload/uploadDocument\",\r\n  4: \"/massUpload/uploadProductDocument\",\r\n};\r\n\r\nconst MassUpload = () => {\r\n  const [collabTitles, setCollabTitles] = useState([]);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [errorModalShow, setErrorModalShow] = useState(false);\r\n  const [showContentErrors, setShowContentErrors] = useState(false);\r\n  const [showSpreadsheetModal, setShowSpreadsheetModal] = useState(false); // New state for spreadsheet modal\r\n  const { showErrorToast, showSuccessToast } = useToast();\r\n  const [isValidating, setIsValidating] = useState(false);\r\n  const [operationChoice, setOperationChoice] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n  const [columnHeaders, setColumnHeaders] = useState([]);\r\n  const [mandatoryAttributes, setMandatoryAttributes] = useState([]);\r\n  const fileUploaderRef = useRef(); // Add this ref\r\n  const [formattedData, setFormattedData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Log the global variable directly to verify its contents\r\n    console.log(\r\n      \"[MassUpload.jsx] Global collabSpaceTitles:\",\r\n      globalCollabSpaceTitles\r\n    );\r\n    if (Array.isArray(globalCollabSpaceTitles)) {\r\n      setCollabTitles([...globalCollabSpaceTitles]);\r\n    } else {\r\n      console.error(\r\n        \"[MassUpload.jsx] ❌ globalCollabSpaceTitles is not an array!\",\r\n        globalCollabSpaceTitles\r\n      );\r\n    }\r\n    console.log(\"[MassUpload.jsx] Retrieved collabSpaceTitles:\", collabTitles);\r\n  }, []);\r\n\r\n  const handleFileUpload = async (files) => {\r\n    if (files.length === 0) return;\r\n\r\n    try {\r\n      setIsValidating(true);\r\n      console.log(\"Starting file validation...\");\r\n      console.log(\"Selected Operation:\", operationChoice);\r\n      console.log(\"File:\", files[0].name);\r\n\r\n      const validationResult = await validateFile(\r\n        files[0],\r\n        collabTitles,\r\n        operationChoice\r\n      );\r\n\r\n      const {\r\n        headers = [],\r\n        validationErrors = [],\r\n        mandatoryAttributes = [],\r\n        sheetData = [],\r\n      } = validationResult;\r\n\r\n      setColumnHeaders(headers);\r\n      setMandatoryAttributes(mandatoryAttributes);\r\n\r\n      // Map sheet data to JSON format with operation type\r\n      if (sheetData.length > 0) {\r\n        const mappedData = mapsheetData(sheetData, operationChoice);\r\n        console.log(\"Mapped JSON data:\", mappedData);\r\n        setFormattedData(mappedData);\r\n      }\r\n\r\n      if (validationErrors.length === 0) {\r\n        setErrors([]);\r\n        showSuccessToast(\"File validated successfully!\");\r\n      } else {\r\n        setErrors(validationErrors);\r\n        setErrorModalShow(true);\r\n      }\r\n    } catch (errorResponse) {\r\n      console.error(\"Validation failed:\", errorResponse);\r\n\r\n      const {\r\n        errors: responseErrors = [\"Unknown validation error.\"],\r\n        headers: responseHeaders = [],\r\n        mandatoryAttributes: responseMandatoryAttributes = [],\r\n        isTemplateMismatch = false,\r\n      } = errorResponse;\r\n\r\n      // If there's a template mismatch, show error and reset widget\r\n      if (isTemplateMismatch) {\r\n        showErrorToast(\r\n          \"The template uploaded and the selected operation do not match\"\r\n        );\r\n        handleReset(true); // Pass true to skip success toast\r\n        // Clear the file uploader\r\n        if (fileUploaderRef.current) {\r\n          fileUploaderRef.current.handleClearFiles();\r\n        }\r\n        return;\r\n      }\r\n\r\n      // Only set these states if it's not a template mismatch\r\n      setErrors(responseErrors);\r\n      setColumnHeaders(responseHeaders);\r\n      setMandatoryAttributes(responseMandatoryAttributes);\r\n      setErrorModalShow(true);\r\n    } finally {\r\n      setIsValidating(false);\r\n    }\r\n  };\r\n\r\n  const handleDownloadTemplate = () => {\r\n    downloadTemplate(showErrorToast)(operationChoice);\r\n  };\r\n\r\n  const handleReset = (skipSuccessToast = false) => {\r\n    // Reset all states to their initial values\r\n    setModalShow(false);\r\n    setErrorModalShow(false);\r\n    setShowContentErrors(false);\r\n    setShowSpreadsheetModal(false);\r\n    setIsValidating(false);\r\n    setOperationChoice(\"\");\r\n    setErrors([]);\r\n    setColumnHeaders([]);\r\n    setMandatoryAttributes([]);\r\n    setFormattedData(null); // Add this line\r\n\r\n    // Reset the dropdown\r\n    const selectElement = document.querySelector(\r\n      'select[aria-label=\"Choose Operations\"]'\r\n    );\r\n    if (selectElement) {\r\n      selectElement.value = \"\";\r\n    }\r\n\r\n    // Only show success toast if not skipped\r\n    if (!skipSuccessToast) {\r\n      showSuccessToast(\"Widget reset successfully!\");\r\n    }\r\n  };\r\n\r\n  const handleOpenSpreadsheetModal = () => {\r\n    setShowContentErrors(false); // Close content errors modal\r\n    setShowSpreadsheetModal(true); // Open spreadsheet modal\r\n  };\r\n\r\n  const handleOperationChange = (value) => {\r\n    console.log(\"Operation selected:\", value); // Debug log\r\n    setOperationChoice(value);\r\n  };\r\n\r\n  // Add this useEffect to monitor state changes\r\n  useEffect(() => {\r\n    console.log(\"Operation Choice updated:\", operationChoice);\r\n  }, [operationChoice]);\r\n\r\n  // It will be disabled if no file is uploaded (no headers) or if there are validation errors.\r\n  const submitDisabled = columnHeaders.length === 0 || errors.length > 0;\r\n  const manageSpreadsheetDisabled = columnHeaders.length === 0; // Disable if no file uploaded\r\n\r\n  const handleConfirmSubmit = async () => {\r\n    try {\r\n      if (!formattedData) {\r\n        showErrorToast(\"No data to submit\");\r\n        return;\r\n      }\r\n\r\n      const endpoint = API_ENDPOINTS[operationChoice];\r\n      if (!endpoint) {\r\n        showErrorToast(\"Invalid operation type\");\r\n        return;\r\n      }\r\n\r\n      const { chunks, totalChunks } = formattedData;\r\n      let successCount = 0;\r\n      let failureCount = 0;\r\n\r\n      showSuccessToast(`Starting upload of ${totalChunks} chunks...`);\r\n\r\n      for (let i = 0; i < chunks.length; i++) {\r\n        try {\r\n          const chunk = chunks[i];\r\n          const response = await api.post(endpoint, {\r\n            items: chunk,\r\n          });\r\n\r\n          if (response.status === 200) {\r\n            successCount++;\r\n            if (i % 5 === 0) {\r\n              // Show progress every 5 chunks\r\n              showSuccessToast(\r\n                `Processed ${i + 1} of ${totalChunks} chunks...`\r\n              );\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(`Chunk ${i + 1} failed:`, error);\r\n          failureCount++;\r\n        }\r\n      }\r\n\r\n      const finalMessage = `Upload complete: ${successCount} chunks successful, ${failureCount} failed`;\r\n      if (failureCount > 0) {\r\n        showErrorToast(finalMessage);\r\n      } else {\r\n        showSuccessToast(\"Upload successful!\");\r\n        setModalShow(false);\r\n        handleReset();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Upload error:\", error);\r\n      showErrorToast(`Upload failed: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  console.log(\"Errors in Massupload.jsx:\", errors);\r\n\r\n  // Add this computed value for FileUpload component\r\n  const isFileUploadDisabled = !operationChoice;\r\n\r\n  return (\r\n    <>\r\n      <Stack className=\"mt-3\" gap={4}>\r\n        {/* Choose operation and download template */}\r\n        <Stack direction=\"horizontal\">\r\n          <CustomSelect\r\n            selectedValue={operationChoice}\r\n            onChange={handleOperationChange}\r\n            size=\"lg\"\r\n            className=\"w-50\"\r\n            options={{\r\n              defaultLabel: \"Choose Operations\",\r\n              list: [\r\n                { value: \"1\", label: \"Physical Product/Raw Material\" },\r\n                { value: \"2\", label: \"Physical Product Structure\" },\r\n                { value: \"3\", label: \"Document\" },\r\n                { value: \"4\", label: \"Physical Product-Document\" },\r\n              ],\r\n            }}\r\n          />\r\n          {/* Conditionally render multiple file input for Document type */}\r\n          <div className=\"p-2 ms-auto\">\r\n            {operationChoice === \"3\" && (\r\n              <Form.Group controlId=\"formFileMultiple\">\r\n                <Form.Control type=\"file\" multiple />\r\n              </Form.Group>\r\n            )}\r\n          </div>\r\n          <div className=\"p-2\">\r\n            <CustomButton\r\n              variant=\"link ms-auto\"\r\n              size=\"lg\"\r\n              onClick={handleDownloadTemplate}\r\n              text=\"Download Template\"\r\n            />\r\n          </div>\r\n        </Stack>\r\n\r\n        {/* Drag and Drop File Upload */}\r\n        {/* Modified FileUpload with disabled state */}\r\n        <div className={isFileUploadDisabled ? \"opacity-50\" : \"\"}>\r\n          <FileUpload\r\n            ref={fileUploaderRef}\r\n            fileTypes={[\"XLSX\"]}\r\n            multiple={false}\r\n            onUpload={handleFileUpload}\r\n            onReset={handleReset}\r\n            disabled={isFileUploadDisabled}\r\n            message={\r\n              isFileUploadDisabled\r\n                ? \"Please select an operation first\"\r\n                : \"Drag & Drop your files here or Click to browse\"\r\n            }\r\n          />\r\n        </div>\r\n\r\n        {/* Show loader while validating */}\r\n        {isValidating && <Loader />}\r\n\r\n        {/* Submit Button and Content Error Button */}\r\n        <Stack direction=\"horizontal\" gap={2}>\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            label=\"Background\"\r\n            className=\"size-increase\"\r\n          />\r\n          <div className=\"ms-auto d-flex gap-5\">\r\n            {errors.length > 0 && (\r\n              <CustomButton\r\n                variant=\"danger\"\r\n                onClick={() => setShowContentErrors(true)}\r\n                text={`Content Errors (${errors.length})`}\r\n              />\r\n            )}\r\n\r\n            <CustomButton\r\n              variant={manageSpreadsheetDisabled ? \"secondary\" : \"info\"}\r\n              onClick={handleOpenSpreadsheetModal}\r\n              text=\"Manage Spreadsheet Columns\"\r\n              disabled={manageSpreadsheetDisabled}\r\n            />\r\n\r\n            <CustomButton\r\n              variant={submitDisabled ? \"secondary\" : \"primary\"}\r\n              disabled={submitDisabled}\r\n              size=\"lg\"\r\n              onClick={() => setModalShow(true)}\r\n              text=\"Submit\"\r\n            />\r\n          </div>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      {/* Content Errors Modal */}\r\n      <ContentErrorsModal\r\n        show={showContentErrors}\r\n        onHide={() => setShowContentErrors(false)}\r\n        errors={errors}\r\n      />\r\n\r\n      {/* Confirmation Modal */}\r\n\r\n      <ConfirmationModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        onConfirm={handleConfirmSubmit}\r\n      />\r\n\r\n      {/* Column Mapping */}\r\n\r\n      <ColumnMappingModal\r\n        show={showSpreadsheetModal}\r\n        onHide={() => setShowSpreadsheetModal(false)}\r\n        columnHeaders={columnHeaders}\r\n        mandatoryAttributes={mandatoryAttributes}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MassUpload;\r\n","import { MSG_DROPDOWN_NOT_SELECTED } from \"./toastMessages\";\r\n\r\nexport const downloadTemplate = (showErrorToast) => (operationChoice) => {\r\n  let url = \"\";\r\n  switch (operationChoice) {\r\n    case \"1\": // Physical Product/Raw Material\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProductSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"2\": // Physical Product Structure\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProductStructureSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"3\": // Document\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/DocumentSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"4\": // Physical Product-Document\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProduct-DocumentSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    default:\r\n      showErrorToast(MSG_DROPDOWN_NOT_SELECTED);\r\n      return;\r\n  }\r\n  window.open(url, \"_blank\");\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport \"./styles/variables.css\";\r\nimport MassUpload from \"./pages/mass-upload/massUpload\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <Provider store={store}>\r\n      <MassUpload />\r\n      <ToastContainer />\r\n    </Provider>\r\n\r\n    //  <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  // console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n\r\n","import { loadWAFData } from \"../../../utils/helpers\";\r\n\r\nexport const fetchCsrfToken = async () => {\r\n  try {\r\n    let securityContext1 = window.widget.getValue(\"Credentials\");\r\n    const WAFData = await loadWAFData();\r\n    console.log(\"Security Context is:\", securityContext1);\r\n    const csrfURL = process.env.REACT_APP_CSRF_URL;\r\n\r\n    const response = await new Promise((resolve, reject) => {\r\n      WAFData.authenticatedRequest(csrfURL, {\r\n        method: \"GET\",\r\n        type: \"json\",\r\n        onComplete: resolve,\r\n        onFailure: reject,\r\n      });\r\n    });\r\n\r\n    const csrfToken = response.csrf.name;\r\n    const csrfValue = response.csrf.value;\r\n    const securityContextHeader = \"SecurityContext\";\r\n    const securityContextValue = securityContext1;\r\n\r\n    const headers = {\r\n      [csrfToken]: csrfValue,\r\n      [securityContextHeader]: securityContextValue,\r\n    };\r\n    return headers;\r\n  } catch (error) {\r\n    console.error(\"[CSRF] Failed to fetch token:\", error);\r\n    return; // Return empth so that the else block should execute.\r\n  }\r\n};\r\n"],"names":["_ref","variant","size","type","disabled","onClick","className","title","text","imageSrc","props","_objectWithoutProperties","_excluded","_jsxs","Button","_objectSpread","children","_jsx","src","alt","style","width","height","marginRight","Loader","show","onHide","footerButtons","Modal","centered","Header","closeButton","Title","Body","Footer","map","btn","index","label","useToast","showToast","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","pauseOnFocusLoss","draggable","theme","transition","Bounce","otherOptions","toast","showSuccessToast","options","arguments","length","undefined","showErrorToast","showInfoToast","showWarningToast","forwardRef","ref","fileTypes","multiple","onUpload","onReset","files","setFiles","useState","useImperativeHandle","handleClearFiles","skipSuccessToast","handleClearFile","current","concat","FileUploader","handleChange","selectedFiles","fileArray","name","types","hoverTitle","file","display","alignItems","background","border","cursor","color","opacity","validateFile","collabSpaceTitles","selectedOperation","Promise","resolve","reject","_config$MassUpload$ma","_config$MassUpload$ma2","console","log","operation","fileName","matchedOperation","expectedHeaders","config","fileHeaders","mandatoryAttributes","errors","headers","Array","isArray","error","reader","FileReader","readAsBinaryString","onload","async","workbook","XLSX","e","target","result","sheetName","SheetNames","worksheet","Sheets","uploadedHeaders","sheet_to_json","header","every","includes","isTemplateMismatch","allSheetData","defval","chunks","data","chunkSize","i","push","slice","processDataInChunks","validationErrors","invalidPrefixes","errorStats","mandatory","collabSpace","einPrefix","docPrefix","chunkIndex","chunk","progress","Math","round","forEach","row","indexInChunk","globalRowIndex","field","toString","trim","_row$CollaborativeSp","userCollabSpace","valueToValidate","columnName","_row$columnName","some","prefix","startsWith","_row$columnName2","processedRows","totalRows","currentErrors","collaborativeSpace","documentPrefix","total","byType","sheetData","onerror","selectedValue","onChange","Form","Select","value","defaultLabel","list","option","attrIndex","Alert","processedErrors","useMemo","errorGroups","reduce","groups","rowMatch","match","columnMatch","errorMsg","split","join","rowNumber","columns","Object","values","sort","a","b","Number","cache","CellMeasurerCache","fixedWidth","defaultHeight","rowRenderer","_ref2","key","parent","CellMeasurer","columnIndex","rowIndex","column","err","ReusableAlert","_Fragment","AutoSizer","_ref3","List","rowCount","rowHeight","deferredMeasurementCache","CustomModal","ErrorPopup","onConfirm","columnHeaders","handleCheckboxChange","checkedItems","handleSelectChange","selectedAttributes","mappedAttributes","allNLSValues","dropdownOptions","React","filter","nls","toLowerCase","headerMappings","Table","bordered","isMandatory","hasNLS","warn","normalizedHeader","mappedValue","normalizedNLS","hasMatchingNLS","CustomSelect","attr","backendName","uiLabel","useMassUpload","setMappedAttributes","ENOVIA_BASE_URL","process","useEffect","_metadataResponse$out","_metadataResponse$out2","_metadataResponse$out3","_attributeResponse$ou","_attributeResponse$ou2","_attributeResponse$ou3","_attributeResponse$ou4","_attributeResponse$ou5","fetchCsrfToken","MSG_FETCH_CSRF_HEADERS_FAILED","metadataResponse","callEnoviaWebService","output","Error","member","objectId","id","attributeResponse","busIDs","groupData","results","item","mappedData","deploymentExtension","fetchColumnMapping","setCheckedItems","setSelectedAttributes","filterMappedAttributes","setfilterMappedAttributes","StaticTable","errorMessage","MappedList","OPERATION_TYPES","mappers","_row$PhysicalProduct","_row$PhysicalProduct$","productType","attributes","description","path","partNumber","classificationType","collabspace","parentId","childId","relationshipType","quantity","unit","documentType","revision","productId","documentId","operationType","items","totalItems","totalChunks","mapper","mappedItem","processInChunks","API_ENDPOINTS","MassUpload","collabTitles","setCollabTitles","modalShow","setModalShow","errorModalShow","setErrorModalShow","showContentErrors","setShowContentErrors","showSpreadsheetModal","setShowSpreadsheetModal","isValidating","setIsValidating","operationChoice","setOperationChoice","setErrors","setColumnHeaders","setMandatoryAttributes","fileUploaderRef","useRef","formattedData","setFormattedData","globalCollabSpaceTitles","handleReset","selectElement","document","querySelector","submitDisabled","manageSpreadsheetDisabled","isFileUploadDisabled","Stack","gap","direction","Group","controlId","Control","CustomButton","handleDownloadTemplate","url","MSG_DROPDOWN_NOT_SELECTED","window","open","downloadTemplate","FileUpload","validationResult","mapsheetData","errorResponse","responseErrors","responseHeaders","responseMandatoryAttributes","Check","handleOpenSpreadsheetModal","ContentErrorsModal","ConfirmationModal","endpoint","successCount","failureCount","api","post","status","finalMessage","ColumnMappingModal","root","widget","hasOnLoadRun","addEvent","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","body","getElementById","createElement","appendChild","ReactDOM","render","Provider","store","ToastContainer","start","securityContext1","getValue","WAFData","loadWAFData","csrfURL","response","authenticatedRequest","method","onComplete","onFailure","csrfToken","csrf","csrfValue","securityContextHeader","securityContextValue"],"sourceRoot":""}