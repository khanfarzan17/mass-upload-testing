{"version":3,"file":"static/js/903.05ec3ac8.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/Loader/Loader.js","components/Modal/customModal.jsx","hooks/useToast.js","components/FileUploader/FileUploader.jsx","pages/mass-upload/validateFile.js","components/Select/customSelect.jsx","components/Alert/ReusableAlert.jsx","components/ErrorPopup/ErrorPopup.jsx","components/Modals/ContentErrorsModal.jsx","components/Modals/ConfirmationModal.jsx","components/bootsrap-table/Table.jsx","hooks/Mass-Upload/useMassUpload.js","pages/mass-upload/mappedList.jsx","components/Modals/ColumnMappingModal.jsx","pages/mass-upload/massUpload.jsx","utils/downloadTemplate.js","massuUploadIndex.js","services/api/PlantAssignment/fetchCsrfService.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CustomButton = ({\r\n  variant = \"primary\",\r\n  size = \"md\",\r\n  type = \"button\",\r\n  disabled = false,\r\n  onClick,\r\n  className = \"\",\r\n  title,\r\n  text,\r\n  imageSrc,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      size={size}\r\n      type={type}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      className={className}\r\n      title={title}\r\n      {...props}\r\n    >\r\n      {imageSrc && (\r\n        <img\r\n          src={imageSrc}\r\n          alt={text}\r\n          style={{ width: \"20px\", height: \"20px\", marginRight: \"5px\" }}\r\n        />\r\n      )}{\" \"}\r\n      {/* Render image if provided */}\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nCustomButton.propTypes = {\r\n  variant: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n  imageSrc: PropTypes.string, // PropType for image source\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from \"react\";\r\nimport \"./Loader.css\"; // Create a CSS file for custom styles\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst CustomModal = ({ show, onHide, title, children, footerButtons }) => {\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"lg\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title || \"Modal Title\"}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n      <Modal.Footer>\r\n        {footerButtons ? (\r\n          footerButtons.map((btn, index) => (\r\n            <Button\r\n              key={index}\r\n              variant={btn.variant || \"secondary\"}\r\n              onClick={btn.onClick}\r\n            >\r\n              {btn.label}\r\n            </Button>\r\n          ))\r\n        ) : (\r\n          <Button variant=\"secondary\" onClick={onHide}>\r\n            Close\r\n          </Button>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","// hooks/useToast.js\r\nimport { toast } from \"react-toastify\";\r\nimport { Bounce } from \"react-toastify\";\r\n\r\nconst useToast = () => {\r\n  const showToast = ({\r\n    message,\r\n    type = \"default\",\r\n    position = \"top-right\",\r\n    autoClose = 2000,\r\n    hideProgressBar = false,\r\n    closeOnClick = true,\r\n    pauseOnHover = false,\r\n    pauseOnFocusLoss= false,\r\n    draggable = true,\r\n    theme = \"light\",\r\n    transition = Bounce,\r\n    ...otherOptions\r\n  }) => {\r\n    const toastFunction = toast[type] || toast;\r\n\r\n    toastFunction(message, {\r\n      position,\r\n      autoClose,\r\n      hideProgressBar,\r\n      closeOnClick,\r\n      pauseOnHover,\r\n      draggable,\r\n      theme,\r\n      transition,\r\n      ...otherOptions,\r\n    });\r\n  };\r\n\r\n  const showSuccessToast = (message, options = {}) => {\r\n    showToast({ message, type: \"success\", ...options });\r\n  };\r\n\r\n  const showErrorToast = (message, options = {}) => {\r\n    showToast({ message, type: \"error\", ...options });\r\n  };\r\n\r\n  const showInfoToast = (message, options = {}) => {\r\n    showToast({ message, type: \"info\", ...options });\r\n  };\r\n\r\n  const showWarningToast = (message, options = {}) => {\r\n    showToast({ message, type: \"warn\", ...options });\r\n  };\r\n\r\n  return { showToast, showSuccessToast, showErrorToast, showInfoToast, showWarningToast };\r\n};\r\n\r\nexport default useToast;","import React, { useState } from \"react\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport \"./FileUploader.css\";\r\nimport useToast from \"../../hooks/useToast\";\r\n\r\nconst FileUpload = ({\r\n  fileTypes = [\"JPEG\", \"PNG\", \"GIF\", \"XLSX\", \"CSV\"],\r\n  multiple = true,\r\n  onUpload,\r\n  onReset,\r\n  disabled = false,\r\n  message = \"Drag & Drop your files here or Click to browse\",\r\n}) => {\r\n  const [files, setFiles] = useState([]);\r\n  const { showErrorToast } = useToast();\r\n\r\n  const handleChange = (selectedFiles) => {\r\n    const fileArray = multiple ? [...selectedFiles] : [selectedFiles];\r\n    setFiles(fileArray);\r\n\r\n    // Callback function to send files to parent component\r\n    if (onUpload) {\r\n      onUpload(fileArray);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (event) => {\r\n    if (disabled) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      showErrorToast(\"Please choose operation from the drop down first\");\r\n    }\r\n  };\r\n\r\n  const handleClearFiles = () => {\r\n    setFiles([]);\r\n    if (onUpload) {\r\n      onUpload([]);\r\n    }\r\n    // Call the reset function to clear all states\r\n    if (onReset) {\r\n      onReset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`file-upload-container ${disabled ? \"disabled\" : \"\"}`}\r\n      onDragOver={handleDragOver}\r\n    >\r\n      <h2>\r\n        {disabled ? \"Please select an operation first\" : \"Drag & Drop Files\"}\r\n      </h2>\r\n      <div className=\"upload-area\">\r\n        <FileUploader\r\n          multiple={multiple}\r\n          handleChange={handleChange}\r\n          name=\"file\"\r\n          types={fileTypes}\r\n          disabled={disabled}\r\n          hoverTitle={disabled ? \"\" : \"Drop here\"}\r\n        />\r\n        <div className=\"file-list\">\r\n          {files.length > 0 ? (\r\n            files.map((file, index) => (\r\n              <div\r\n                className=\"mb-4\"\r\n                key={index}\r\n                style={{ display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                <p className=\"me-2 mb-0\">📁 {file.name}</p>\r\n                <button\r\n                  onClick={handleClearFiles}\r\n                  style={{\r\n                    background: \"none\",\r\n                    border: \"none\",\r\n                    cursor: disabled ? \"not-allowed\" : \"pointer\",\r\n                    color: \"red\",\r\n                    opacity: disabled ? 0.5 : 1,\r\n                  }}\r\n                  disabled={disabled}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>{message}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n","import * as XLSX from \"xlsx\";\r\nimport config from \"./config.json\";\r\n\r\nconst validateFile = (file, collabSpaceTitles) => {\r\n  return new Promise((resolve, reject) => {\r\n    console.log(\"Starting file validation for:\", file.name);\r\n    console.log(\r\n      \"[validateFile.js] Required Collaborative Space:\",\r\n      collabSpaceTitles\r\n    );\r\n\r\n    // 🔍 Ensure collabSpaceTitles is an array\r\n    if (!Array.isArray(collabSpaceTitles)) {\r\n      console.error(\r\n        \"[validateFile.js] ❌ collabSpaceTitles is not an array!\",\r\n        collabSpaceTitles\r\n      );\r\n      reject({\r\n        errors: [\"Internal error: Invalid Collaborative Space list.\"],\r\n        headers: [],\r\n      });\r\n      return;\r\n    }\r\n\r\n    console.log(\r\n      \"[validateFile.js] Required Collaborative Spaces:\",\r\n      collabSpaceTitles\r\n    );\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsBinaryString(file);\r\n\r\n    reader.onload = (e) => {\r\n      console.log(\"File successfully read. Parsing...\");\r\n\r\n      const workbook = XLSX.read(e.target.result, { type: \"binary\" });\r\n      const sheetName = workbook.SheetNames[0];\r\n      console.log(\"Detected sheet name:\", sheetName);\r\n\r\n      const worksheet = workbook.Sheets[sheetName];\r\n\r\n      const headers =\r\n        XLSX.utils.sheet_to_json(worksheet, { header: 1 })[0] || [];\r\n      console.log(\"Extracted headers:\", headers);\r\n\r\n      if (!headers || headers.length === 0) {\r\n        console.error(\"❌ No headers found in the file.\");\r\n        reject({\r\n          errors: [\"The uploaded file has no content or is empty.\"],\r\n          headers: [],\r\n        });\r\n        return;\r\n      }\r\n\r\n      // ✅ Convert worksheet into JSON (with empty cell values captured)\r\n      const sheetData = XLSX.utils.sheet_to_json(worksheet, { defval: \"\" });\r\n      console.log(\"Extracted sheet data:\", sheetData);\r\n\r\n      if (sheetData.length === 0) {\r\n        console.error(\"❌ No row data found. Only headers exist.\");\r\n        reject({\r\n          errors: [\r\n            \"The uploaded file contains only headers but no data. Please add at least one row.\",\r\n          ],\r\n          headers,\r\n        });\r\n        return;\r\n      }\r\n\r\n      // ✅ Extract headers from the first data row\r\n      const fileHeaders = Object.keys(sheetData[0]);\r\n      console.log(\"Parsed file headers:\", fileHeaders);\r\n\r\n      // 🔍 **Step 1: Find Matching Operation Based on Headers**\r\n      let matchedOperation = null;\r\n      for (const [key, value] of Object.entries(config.MassUpload)) {\r\n        if (value.fileHeaders.every((header) => fileHeaders.includes(header))) {\r\n          matchedOperation = key;\r\n          console.log(\"Matched operation:\", matchedOperation);\r\n          break;\r\n        }\r\n      }\r\n      if (!matchedOperation) {\r\n        console.error(\"❌ No matching operation found for given headers.\");\r\n        reject({\r\n          errors: [\"File headers do not match any expected template.\"],\r\n          headers,\r\n        });\r\n        return;\r\n      }\r\n\r\n      // ✅ **Step 2: Validate Headers**\r\n      const expectedHeaders = config.MassUpload[matchedOperation].fileHeaders;\r\n      console.log(\"Expected Headers:\", expectedHeaders);\r\n      const mandatoryAttributes =\r\n        config.MassUpload[matchedOperation].mandatoryAttributes;\r\n      console.log(\"Mandatory Attributes:\", mandatoryAttributes);\r\n\r\n      // 🔍 **Step 3: Check for Missing Headers**\r\n      const missingHeaders = expectedHeaders.filter(\r\n        (header) => !fileHeaders.includes(header)\r\n      );\r\n      if (missingHeaders.length > 0) {\r\n        console.error(\"❌ Missing headers:\", missingHeaders);\r\n        reject({\r\n          errors: [`Missing required headers: ${missingHeaders.join(\", \")}`],\r\n          headers,\r\n          mandatoryAttributes,\r\n        });\r\n        return;\r\n      }\r\n\r\n      // 🔍 **Step 4: Validate Mandatory Fields**\r\n      const validationErrors = [];\r\n      sheetData.forEach((row, index) => {\r\n        mandatoryAttributes.forEach((field) => {\r\n          if (!row[field] || row[field].toString().trim() === \"\") {\r\n            validationErrors.push(\r\n              `Row ${index + 2}: \"${field}\" is required but is empty`\r\n            );\r\n          }\r\n        });\r\n\r\n        // 🔍 **Step 5: Validate \"Collaborative Space\" Field**//\r\n\r\n        const userCollabSpace = row[\"Collaborative Space\"]\r\n          ? row[\"Collaborative Space\"].trim()\r\n          : \"\";\r\n        console.log(\r\n          `[validateFile.js] Row ${index + 2}: User's Collaborative Space:`,\r\n          userCollabSpace\r\n        );\r\n\r\n        if (!userCollabSpace) {\r\n          validationErrors.push(\r\n            `Row ${index + 2}: \"Collaborative Space\"  is Missing or Empty`\r\n          );\r\n        } else if (!collabSpaceTitles.includes(userCollabSpace)) {\r\n          validationErrors.push(\r\n            `Row ${\r\n              index + 2\r\n            }: You are not allowed to create in  \"Collaborative Space -\" (${userCollabSpace}) `\r\n          );\r\n        }\r\n      });\r\n\r\n      // Compare the value in \"Collaborative Space\" with the provided collabSpaceTitle\r\n\r\n      // 🔴 **If there are validation errors, reject but return headers**\r\n      if (validationErrors.length > 0) {\r\n        console.log(\"Validation errors with mandatory attributes:\", {\r\n          errors: validationErrors,\r\n          headers,\r\n          mandatoryAttributes, // Make sure we're including this\r\n        });\r\n        reject({\r\n          errors: validationErrors,\r\n          headers,\r\n          mandatoryAttributes, // Add this line\r\n        });\r\n        return;\r\n      }\r\n\r\n      // ✅ **Final Step: Resolve with Headers and Sheet Data**\r\n      console.log(\"✅ File validation successful. No errors found.\");\r\n      resolve({\r\n        headers,\r\n        sheetData,\r\n        validationErrors: [],\r\n        mandatoryAttributes, // Make sure we're returning mandatoryAttributes\r\n      });\r\n    };\r\n\r\n    // ❌ **Handle File Read Errors**\r\n\r\n    reader.onerror = () => {\r\n      console.error(\"❌ Error reading the file.\");\r\n      reject({ errors: [\"File reading failed.\"], headers: [] });\r\n    };\r\n  });\r\n};\r\n\r\nexport default validateFile;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./customSelect.css\";\r\n\r\nconst CustomSelect = ({\r\n  index,\r\n  selectedValue,\r\n  options,\r\n  onChange,\r\n  size,\r\n  className,\r\n}) => {\r\n  const handleChange = (e) => {\r\n    // If index is provided use it, otherwise just pass the value\r\n    if (index !== undefined) {\r\n      onChange(index, e.target.value);\r\n    } else {\r\n      onChange(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form.Select\r\n      aria-label=\"Attribute selection\"\r\n      value={selectedValue || \"\"}\r\n      onChange={handleChange}\r\n      size={size}\r\n      className={className}\r\n    >\r\n      <option value=\"\">{options.defaultLabel}</option> {/* Default option */}\r\n      {options.list.map((option, attrIndex) => (\r\n        <option key={attrIndex} value={option.value}>\r\n          {option.label}\r\n        </option>\r\n      ))}\r\n    </Form.Select>\r\n  );\r\n};\r\n\r\nexport default CustomSelect;\r\n","import React from \"react\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nconst ReusableAlert = ({\r\n  variant = \"info\",\r\n  message,\r\n  show = true,\r\n  className = \"\",\r\n}) => {\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <Alert variant={variant} className={className}>\r\n      {typeof message === \"string\" ? message : message}\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default ReusableAlert;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport \"./ErrorPopup.css\";\r\nimport ReusableAlert from \"../Alert/ReusableAlert\";\r\n\r\nconst ErrorPopup = ({ errors }) => {\r\n  console.log(\"Errors in ErrorPopup:\", errors);\r\n  // Group errors by row number\r\n  const groupedErrors = new Map();\r\n\r\n  errors.forEach((error) => {\r\n    // Extract row number and column name using regex\r\n    const rowMatch = error.match(/Row (\\d+):/);\r\n    const columnMatch = error.match(/\"([^\"]*)\" is required/);\r\n\r\n    const rowNum = rowMatch ? rowMatch[1] : \"\"; // Get row number or default to \"-\"\r\n    // If columnMatch exists, use the captured column name, else check if it's a Collaborative Space error\r\n    const columnName = columnMatch\r\n      ? columnMatch[1]\r\n      : error.includes(\"Collaborative Space\")\r\n      ? \"Collaborative Space\"\r\n      : \"\";\r\n    const errorMsg = rowMatch ? error.split(\": \")[1] : error; // Extract error message\r\n    // Initialize array for errors if row number is not already in the Map\r\n    if (!groupedErrors.has(rowNum)) {\r\n      groupedErrors.set(rowNum, []);\r\n    }\r\n    // Add error details to the groupedErrors Map\r\n    groupedErrors.get(rowNum).push({ errorMsg, columnName });\r\n  });\r\n\r\n  const errorMessage = (\r\n    <>\r\n      <strong>⚠️ Note:</strong> Below reports show only uploaded spreadsheet\r\n      error rows. To resolve these issues, update the spreadsheet and re-import.\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ReusableAlert\r\n        variant=\"danger\"\r\n        message={errorMessage}\r\n        className=\"custom-alert\"\r\n      />\r\n      <div className=\"error-table-container\">\r\n        <Table responsive bordered className=\"custom-error-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Row Number</th>\r\n              <th>Error Description</th>\r\n              <th>Column Name</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Array.from(groupedErrors.entries()).length > 0 ? (\r\n              Array.from(groupedErrors.entries()).map(\r\n                ([rowNum, errorDetails]) => (\r\n                  <tr key={rowNum}>\r\n                    <td className=\"row-number\">{rowNum}</td>\r\n\r\n                    <td>\r\n                      <ul>\r\n                        {errorDetails.map(({ columnName }, index) => (\r\n                          <li\r\n                            key={index}\r\n                            className={\r\n                              columnName ? \"column-name\" : \"no-column-style\"\r\n                            }\r\n                          >\r\n                            {columnName || \"N/A\"}\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </td>\r\n\r\n                    <td className=\"error-description\">\r\n                      <ul>\r\n                        {errorDetails.map(({ errorMsg }, index) => (\r\n                          <li key={index}>{errorMsg}</li>\r\n                        ))}\r\n                      </ul>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              )\r\n            ) : (\r\n              <tr>\r\n                <td colSpan={3} className=\"text-center no-errors\">\r\n                  No Errors Found\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorPopup;\r\n","// ContentErrorsModal.jsx\r\nimport React from \"react\";\r\nimport CustomModal from \"../../components/Modal/customModal\";\r\nimport ErrorPopup from \"../../components/ErrorPopup/ErrorPopup\";\r\n\r\nconst ContentErrorsModal = ({ show, onHide, errors }) => {\r\n  return (\r\n    <CustomModal\r\n      show={show}\r\n      onHide={onHide}\r\n      title=\"Content Errors\"\r\n      footerButtons={[\r\n        {\r\n          label: \"Close\",\r\n          variant: \"danger\",\r\n          onClick: onHide,\r\n        },\r\n      ]}\r\n    >\r\n      <ErrorPopup errors={errors} />\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default ContentErrorsModal;\r\n","// ConfirmationModal.jsx\r\nimport React from \"react\";\r\nimport CustomModal from \"../../components/Modal/customModal\";\r\n\r\nconst ConfirmationModal = ({ show, onHide, onConfirm }) => {\r\n  return (\r\n    <CustomModal\r\n      show={show}\r\n      onHide={onHide}\r\n      title=\"Confirmation\"\r\n      footerButtons={[\r\n        {\r\n          label: \"Cancel\",\r\n          variant: \"danger\",\r\n          onClick: onHide,\r\n        },\r\n        {\r\n          label: \"Confirm\",\r\n          variant: \"success\",\r\n          onClick: onConfirm,\r\n        },\r\n      ]}\r\n    >\r\n      <p>Are you sure you want to submit?</p>\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport CustomSelect from \"../Select/customSelect\";\r\nimport \"./staticTable.css\";\r\n\r\nconst StaticTable = ({\r\n  columnHeaders,\r\n  handleCheckboxChange,\r\n  checkedItems,\r\n  handleSelectChange,\r\n  selectedAttributes,\r\n  mappedAttributes, // Passed mapped attributes\r\n  mandatoryAttributes,\r\n}) => {\r\n  const { allNLSValues = [], dropdownOptions = [] } = mappedAttributes || {};\r\n\r\n  console.log(\"Mapped Attributes prop:\", mappedAttributes);\r\n  console.log(\"columnHeaders\", columnHeaders);\r\n  console.log(\"static table recieved manditory Attribute\", mandatoryAttributes);\r\n  console.log(\"Dropdown Options :\", dropdownOptions);\r\n\r\n  const hasMatchingNLS = (header) => {\r\n    if (!Array.isArray(allNLSValues)) {\r\n      console.warn(\"allNLSValues is not an array:\", allNLSValues);\r\n      return false;\r\n    }\r\n    const match = allNLSValues.includes(header);\r\n    console.log(`Header \"${header}\" NLS match:`, match ? \"✅\" : \"❌\");\r\n    return match;\r\n  };\r\n\r\n  return (\r\n    <Table bordered className=\"table-light \">\r\n      <thead>\r\n        <tr>\r\n          <th className=\"header-styling\"> Column Name</th>\r\n          <th className=\"header-styling\">Attribute Name</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {columnHeaders.map((header, index) => {\r\n          const isMandatory = mandatoryAttributes.includes(header);\r\n          const hasNLS = hasMatchingNLS(header);\r\n          // Log the state of each row\r\n          console.log(`Row ${index}:`, {\r\n            header,\r\n            hasNLS,\r\n            isMandatory,\r\n            defaultLabel: hasNLS ? header : \"\",\r\n          });\r\n          return (\r\n            <tr key={index}>\r\n              <td>{header}</td>\r\n              <td>\r\n                <CustomSelect\r\n                  index={index}\r\n                  selectedValue={selectedAttributes[index] || header}\r\n                  onChange={handleSelectChange}\r\n                  size=\"lg\"\r\n                  className=\"w-100\"\r\n                  disabled={!hasNLS}\r\n                  options={{\r\n                    defaultLabel: hasNLS\r\n                      ? header\r\n                      : \"Please select from Drop Down\", // Show header only if NLS matches\r\n                    list: dropdownOptions.map((attr) => ({\r\n                      // Always show all mapped attributes\r\n                      value: attr.backendName,\r\n                      label: attr.uiLabel,\r\n                    })),\r\n                  }}\r\n                />\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default StaticTable;\r\n","import { MSG_FETCH_CSRF_HEADERS_FAILED } from \"../../utils/toastMessages\";\r\nimport useToast from \"../useToast\";\r\nimport { fetchCsrfToken } from \"../../services/api/PlantAssignment/fetchCsrfService\";\r\nimport { callEnoviaWebService, fetchData } from \"../../utils/helpers\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useMassUpload = () => {\r\n  const { showErrorToast } = useToast();\r\n  const [mappedAttributes, setMappedAttributes] = useState([]);\r\n  const ENOVIA_BASE_URL = process.env.REACT_APP_ENOVIA_BASE_URL;\r\n\r\n  // Function to Fetch Spreadsheet Column Mapping\r\n  const fetchColumnMapping = async () => {\r\n    try {\r\n      console.log(\"Fetching column mapping...\");\r\n\r\n      // Get CSRF Headers\r\n      const headers = await fetchCsrfToken();\r\n      if (!headers) {\r\n        showErrorToast(MSG_FETCH_CSRF_HEADERS_FAILED);\r\n        return;\r\n      }\r\n\r\n      // 🔹 Step 1: Call API 1 (GET) to Fetch Metadata\r\n      const metadataResponse = await callEnoviaWebService(\r\n        \"GET\",\r\n        `${ENOVIA_BASE_URL}/resources/v1/modeler/dseng/dseng:EngItem/search?%24top=1`,\r\n        \"\",\r\n        headers\r\n      );\r\n\r\n      if (!metadataResponse || !metadataResponse.output) {\r\n        throw new Error(\"Failed to fetch metadata.\");\r\n      }\r\n      console.log(\"Metadata Member:\", metadataResponse.output.member);\r\n\r\n      const objectId = metadataResponse.output?.member?.[0]?.id;\r\n      if (!objectId) {\r\n        throw new Error(\"No object ID found in metadata.\");\r\n      }\r\n\r\n      console.log(\"Extracted Object ID:\", objectId);\r\n\r\n      // 🔹 Step 2: Call API 2 (POST) to Fetch Attributes\r\n      const attributeResponse = await callEnoviaWebService(\r\n        \"POST\",\r\n        `${ENOVIA_BASE_URL}/resources/v1/collabServices/attributes/op/read?tenant=OI000186152&xrequestedwith=xmlhttprequest`,\r\n        {\r\n          busIDs: [objectId],\r\n        },\r\n        headers\r\n      );\r\n\r\n      if (!attributeResponse || !attributeResponse.output) {\r\n        throw new Error(\"Failed to fetch attribute data.\");\r\n      }\r\n      console.log(\"Attribute Response:\", attributeResponse.output);\r\n\r\n      // 🔹 Step 3: Extract & Map Relevant Attributes\r\n\r\n      const groupData = attributeResponse.output.results?.[0]?.groupData || [];\r\n      console.log(\r\n        \"Full Group Data (with all NLS values):\",\r\n        groupData.map((item) => item.nls)\r\n      );\r\n\r\n      // Store all NLS values from groupData for header matching\r\n      const allNLSValues = groupData.map((item) => item.nls);\r\n\r\n      const relevantAttributes =\r\n        attributeResponse.output.results?.[0]?.groupData?.filter(\r\n          (attr) => attr.deploymentExtension === true\r\n        ) || [];\r\n\r\n      // const relevantAttributes = groupData.filter(\r\n      //   (attr) => attr.deploymentExtension === true\r\n      // );\r\n\r\n      const mappedData = relevantAttributes.map((attr) => ({\r\n        uiLabel: attr.nls, // UI Display Name\r\n        backendName: attr.name, // Backend Name\r\n      }));\r\n\r\n      console.log(\"Mapped Attributes:\", mappedData);\r\n      console.log(\"All available NLS values:\", allNLSValues);\r\n      console.log(\"Mapped Attributes (for dropdown):\", mappedData);\r\n      setMappedAttributes({\r\n        allNLSValues: groupData.map((item) => item.nls),\r\n        dropdownOptions: mappedData,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching column mapping:\", error);\r\n      showErrorToast(error.message || \"Error fetching column mapping.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchColumnMapping();\r\n  }, []);\r\n\r\n  return { mappedAttributes };\r\n};\r\n\r\nexport default useMassUpload;\r\n","import React, { useState, useEffect } from \"react\"; // Corrected import for useState\r\nimport StaticTable from \"../../components/bootsrap-table/Table\";\r\nimport useMassUpload from \"../../hooks/Mass-Upload/useMassUpload\";\r\n\r\nconst MappedList = ({ columnHeaders, mandatoryAttributes }) => {\r\n  console.log(\"MappedList - Received columnHeaders:\", columnHeaders);\r\n  console.log(\r\n    \"MappedList - Received mandatoryAttributes:\",\r\n    mandatoryAttributes\r\n  );\r\n  const { mappedAttributes } = useMassUpload();\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [selectedAttributes, setSelectedAttributes] = useState({});\r\n  const [filterMappedAttributes, setfilterMappedAttributes] = useState({\r\n    allNLSValues: [],\r\n    dropdownOptions: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(mappedAttributes)) {\r\n      console.log(\"Filtered mapped attributes:\", mappedAttributes);\r\n      setfilterMappedAttributes({\r\n        allNLSValues: mappedAttributes.map((attr) => attr.uiLabel),\r\n        dropdownOptions: mappedAttributes,\r\n      });\r\n    }\r\n  }, [mappedAttributes]);\r\n\r\n  const handleCheckboxChange = (index) => {\r\n    setCheckedItems({ ...checkedItems, [index]: !checkedItems[index] });\r\n  };\r\n  const handleSelectChange = (index, selectedValue) => {\r\n    setSelectedAttributes({ ...selectedAttributes, [index]: selectedValue });\r\n  };\r\n\r\n  return (\r\n    <StaticTable\r\n      columnHeaders={columnHeaders}\r\n      handleCheckboxChange={handleCheckboxChange}\r\n      checkedItems={checkedItems}\r\n      handleSelectChange={handleSelectChange}\r\n      selectedAttributes={selectedAttributes}\r\n      mappedAttributes={mappedAttributes}\r\n      mandatoryAttributes={mandatoryAttributes}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MappedList;\r\n","// ColumnMappingModal.jsx\r\nimport React from \"react\";\r\nimport CustomModal from \"../../components/Modal/customModal\";\r\nimport ReusableAlert from \"../../components/Alert/ReusableAlert\";\r\nimport MappedList from \"../../pages/mass-upload/mappedList\";\r\n\r\nconst ColumnMappingModal = ({\r\n  show,\r\n  onHide,\r\n  columnHeaders,\r\n  mandatoryAttributes,\r\n}) => {\r\n  const errorMessage = (\r\n    <>\r\n      <strong>⚠️Note:</strong> All column(s) of uploaded Spreadsheet are mapped\r\n      to valid Attribute Name. All mandatory Attribute Name is mapped to\r\n      uploaded Spreadsheet Column Name.\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <CustomModal\r\n      show={show}\r\n      onHide={onHide}\r\n      title=\"Manage Spreadsheet Columns\"\r\n      footerButtons={[\r\n        {\r\n          label: \"Ok\",\r\n          variant: \"primary\",\r\n          onClick: onHide,\r\n        },\r\n        {\r\n          label: \"Cancel\",\r\n          variant: \"danger\",\r\n          onClick: onHide,\r\n        },\r\n      ]}\r\n    >\r\n      <ReusableAlert\r\n        variant=\"info\"\r\n        message={errorMessage}\r\n        className=\"mapped-popup-alert\"\r\n      />\r\n      <MappedList\r\n        columnHeaders={columnHeaders}\r\n        mandatoryAttributes={mandatoryAttributes}\r\n      />\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default ColumnMappingModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Mockup.css\";\r\nimport { Form, Stack } from \"react-bootstrap\";\r\nimport CustomButton from \"../../components/Button/Button\";\r\nimport FileUpload from \"../../components/FileUploader/FileUploader\";\r\nimport { downloadTemplate } from \"../../utils/downloadTemplate\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport validateFile from \"./validateFile\";\r\nimport CustomSelect from \"../../components/Select/customSelect\";\r\nimport { globalCollabSpaceTitles } from \"../../services/api/droppableService\";\r\nimport ContentErrorsModal from \"../../components/Modals/ContentErrorsModal\";\r\nimport ConfirmationModal from \"../../components/Modals/ConfirmationModal\";\r\nimport ColumnMappingModal from \"../../components/Modals/ColumnMappingModal\";\r\n\r\nconst MassUpload = () => {\r\n  const [collabTitles, setCollabTitles] = useState([]);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [errorModalShow, setErrorModalShow] = useState(false);\r\n  const [showContentErrors, setShowContentErrors] = useState(false);\r\n  const [showSpreadsheetModal, setShowSpreadsheetModal] = useState(false); // New state for spreadsheet modal\r\n  const { showErrorToast, showSuccessToast } = useToast();\r\n  const [isValidating, setIsValidating] = useState(false);\r\n  const [operationChoice, setOperationChoice] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n  const [columnHeaders, setColumnHeaders] = useState([]);\r\n  const [mandatoryAttributes, setMandatoryAttributes] = useState([]);\r\n\r\n  const errorMessage = (\r\n    <>\r\n      <strong>⚠️Note:</strong> All column(s) of uploaded Spreadsheet are mapped\r\n      to valid Attribute Name. All mandatory Attribute Name is mapped to\r\n      uploaded Spreadsheet Column Name.\r\n    </>\r\n  );\r\n\r\n  useEffect(() => {\r\n    // Log the global variable directly to verify its contents\r\n    console.log(\r\n      \"[MassUpload.jsx] Global collabSpaceTitles:\",\r\n      globalCollabSpaceTitles\r\n    );\r\n    if (Array.isArray(globalCollabSpaceTitles)) {\r\n      setCollabTitles([...globalCollabSpaceTitles]);\r\n    } else {\r\n      console.error(\r\n        \"[MassUpload.jsx] ❌ globalCollabSpaceTitles is not an array!\",\r\n        globalCollabSpaceTitles\r\n      );\r\n    }\r\n    console.log(\"[MassUpload.jsx] Retrieved collabSpaceTitles:\", collabTitles);\r\n  }, []);\r\n\r\n  const handleFileUpload = async (files) => {\r\n    if (files.length === 0) return;\r\n\r\n    try {\r\n      setIsValidating(true);\r\n      console.log(\"Starting file validation...\");\r\n\r\n      const validationResult = await validateFile(files[0], collabTitles);\r\n      console.log(\"Validation Result:\", validationResult);\r\n\r\n      const {\r\n        headers = [],\r\n        validationErrors = [],\r\n        mandatoryAttributes = [],\r\n      } = validationResult;\r\n\r\n      console.log(\"Extracted data:\", {\r\n        headers,\r\n        validationErrors,\r\n        mandatoryAttributes,\r\n      });\r\n\r\n      setColumnHeaders(headers);\r\n      setMandatoryAttributes(mandatoryAttributes); // This should now work\r\n\r\n      if (validationErrors.length === 0) {\r\n        setErrors([]);\r\n        showSuccessToast(\"No Error! File validated successfully!\");\r\n      } else {\r\n        setErrors(validationErrors);\r\n        setErrorModalShow(true);\r\n      }\r\n    } catch (errorResponse) {\r\n      console.error(\"Validation failed:\", errorResponse);\r\n\r\n      // Destructure with default values\r\n      const {\r\n        errors: responseErrors = [\"Unknown validation error.\"],\r\n        headers: responseHeaders = [],\r\n        mandatoryAttributes: responseMandatoryAttributes = [],\r\n      } = errorResponse;\r\n\r\n      setErrors(responseErrors);\r\n      setColumnHeaders(responseHeaders);\r\n      setMandatoryAttributes(responseMandatoryAttributes);\r\n      setErrorModalShow(true);\r\n    } finally {\r\n      setIsValidating(false);\r\n    }\r\n  };\r\n\r\n  const handleDownloadTemplate = () => {\r\n    downloadTemplate(showErrorToast)(operationChoice);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    // Reset all states to their initial values\r\n    setModalShow(false);\r\n    setErrorModalShow(false);\r\n    setShowContentErrors(false);\r\n    setShowSpreadsheetModal(false); // Also reset the spreadsheet modal state\r\n    setIsValidating(false);\r\n    setOperationChoice(\"\");\r\n    setErrors([]);\r\n    setColumnHeaders([]);\r\n    setMandatoryAttributes([]);\r\n    // Reset the dropdown\r\n    const selectElement = document.querySelector(\r\n      'select[aria-label=\"Choose Operations\"]'\r\n    );\r\n    if (selectElement) {\r\n      selectElement.value = \"\";\r\n    }\r\n\r\n    // Show toast message\r\n    showSuccessToast(\"Widget reset successfully!\");\r\n  };\r\n\r\n  const handleOpenSpreadsheetModal = () => {\r\n    setShowContentErrors(false); // Close content errors modal\r\n    setShowSpreadsheetModal(true); // Open spreadsheet modal\r\n  };\r\n\r\n  const handleOperationChange = (value) => {\r\n    console.log(\"Operation selected:\", value); // Debug log\r\n    setOperationChoice(value);\r\n  };\r\n\r\n  // Add this useEffect to monitor state changes\r\n  React.useEffect(() => {\r\n    console.log(\"Operation Choice updated:\", operationChoice);\r\n  }, [operationChoice]);\r\n\r\n  // It will be disabled if no file is uploaded (no headers) or if there are validation errors.\r\n  const submitDisabled = columnHeaders.length === 0 || errors.length > 0;\r\n  const manageSpreadsheetDisabled = columnHeaders.length === 0; // Disable if no file uploaded\r\n\r\n  const handleConfirmSubmit = () => {\r\n    alert(\"Confirmed!\");\r\n    setModalShow(false);\r\n  };\r\n\r\n  console.log(\"Operation Choice:\", errors);\r\n\r\n  // Add this computed value for FileUpload component\r\n  const isFileUploadDisabled = !operationChoice;\r\n\r\n  return (\r\n    <>\r\n      <Stack className=\"mt-3\" gap={4}>\r\n        {/* Choose operation and download template */}\r\n        <Stack direction=\"horizontal\">\r\n          <CustomSelect\r\n            selectedValue={operationChoice}\r\n            onChange={handleOperationChange}\r\n            size=\"lg\"\r\n            className=\"w-50\"\r\n            options={{\r\n              defaultLabel: \"Choose Operations\",\r\n              list: [\r\n                { value: \"1\", label: \"Physical Product/Raw Material\" },\r\n                { value: \"2\", label: \"Physical Product Structure\" },\r\n                { value: \"3\", label: \"Document\" },\r\n                { value: \"4\", label: \"Physical Product-Document\" },\r\n              ],\r\n            }}\r\n          />\r\n          {/* Conditionally render multiple file input for Document type */} \r\n          <div className=\"p-2 ms-auto\">\r\n            {operationChoice === \"3\" && (\r\n              <Form.Group controlId=\"formFileMultiple\">\r\n                <Form.Control type=\"file\" multiple />\r\n              </Form.Group>\r\n            )}\r\n          </div>\r\n          <div className=\"p-2\">\r\n            <CustomButton\r\n              variant=\"link ms-auto\"\r\n              size=\"lg\"\r\n              onClick={handleDownloadTemplate}\r\n              text=\"Download Template\"\r\n            />\r\n          </div>\r\n        </Stack>\r\n\r\n        {/* Drag and Drop File Upload */}\r\n        {/* Modified FileUpload with disabled state */}\r\n        <div className={isFileUploadDisabled ? \"opacity-50\" : \"\"}>\r\n          <FileUpload\r\n            fileTypes={[\"XLSX\"]}\r\n            multiple={false}\r\n            onUpload={handleFileUpload}\r\n            onReset={handleReset}\r\n            disabled={isFileUploadDisabled}\r\n            message={\r\n              isFileUploadDisabled\r\n                ? \"Please select an operation first\"\r\n                : \"Drag & Drop your files here or Click to browse\"\r\n            }\r\n          />\r\n        </div>\r\n\r\n        {/* Show loader while validating */}\r\n        {isValidating && <Loader />}\r\n\r\n        {/* Submit Button and Content Error Button */}\r\n        <Stack direction=\"horizontal\" gap={2}>\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            label=\"Background\"\r\n            className=\"size-increase\"\r\n          />\r\n          <div className=\"ms-auto d-flex gap-5\">\r\n            {errors.length > 0 && (\r\n              <CustomButton\r\n                variant=\"danger\"\r\n                onClick={() => setShowContentErrors(true)}\r\n                text={`Content Errors (${errors.length})`}\r\n              />\r\n            )}\r\n\r\n            <CustomButton\r\n              variant={manageSpreadsheetDisabled ? \"secondary\" : \"info\"}\r\n              onClick={handleOpenSpreadsheetModal}\r\n              text=\"Manage Spreadsheet Columns\"\r\n              disabled={manageSpreadsheetDisabled}\r\n            />\r\n\r\n            <CustomButton\r\n              variant={submitDisabled ? \"secondary\" : \"primary\"}\r\n              disabled={submitDisabled}\r\n              size=\"lg\"\r\n              onClick={() => setModalShow(true)}\r\n              text=\"Submit\"\r\n            />\r\n          </div>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      {/* Content Errors Modal */}\r\n      <ContentErrorsModal\r\n        show={showContentErrors}\r\n        onHide={() => setShowContentErrors(false)}\r\n        errors={errors}\r\n      />\r\n\r\n      {/* Confirmation Modal */}\r\n\r\n      <ConfirmationModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        onConfirm={handleConfirmSubmit}\r\n      />\r\n\r\n      {/* Column Mapping */}\r\n\r\n      <ColumnMappingModal\r\n        show={showSpreadsheetModal}\r\n        onHide={() => setShowSpreadsheetModal(false)}\r\n        columnHeaders={columnHeaders}\r\n        mandatoryAttributes={mandatoryAttributes}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MassUpload;\r\n","import { MSG_DROPDOWN_NOT_SELECTED } from \"./toastMessages\";\r\n\r\nexport const downloadTemplate = (showErrorToast) => (operationChoice) => {\r\n  let url = \"\";\r\n  switch (operationChoice) {\r\n    case \"1\": // Physical Product/Raw Material\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProductSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"2\": // Physical Product Structure\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProductStructureSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"3\": // Document\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/DocumentSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"4\": // Physical Product-Document\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProduct-DocumentSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    default:\r\n      showErrorToast(MSG_DROPDOWN_NOT_SELECTED);\r\n      return;\r\n  }\r\n  window.open(url, \"_blank\");\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport \"./styles/variables.css\";\r\nimport MassUpload from \"./pages/mass-upload/massUpload\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <Provider store={store}>\r\n      <MassUpload />\r\n      <ToastContainer />\r\n    </Provider>\r\n\r\n    //  <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  // console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n\r\n","import { loadWAFData } from \"../../../utils/helpers\";\r\n\r\nexport const fetchCsrfToken = async () => {\r\n  try {\r\n    let securityContext1 = window.widget.getValue(\"Credentials\");\r\n    const WAFData = await loadWAFData();\r\n    console.log(\"Security Context is:\", securityContext1);\r\n    const csrfURL = process.env.REACT_APP_CSRF_URL;\r\n\r\n    const response = await new Promise((resolve, reject) => {\r\n      WAFData.authenticatedRequest(csrfURL, {\r\n        method: \"GET\",\r\n        type: \"json\",\r\n        onComplete: resolve,\r\n        onFailure: reject,\r\n      });\r\n    });\r\n\r\n    const csrfToken = response.csrf.name;\r\n    const csrfValue = response.csrf.value;\r\n    const securityContextHeader = \"SecurityContext\";\r\n    const securityContextValue = securityContext1;\r\n\r\n    const headers = {\r\n      [csrfToken]: csrfValue,\r\n      [securityContextHeader]: securityContextValue,\r\n    };\r\n    return headers;\r\n  } catch (error) {\r\n    console.error(\"[CSRF] Failed to fetch token:\", error);\r\n    return; // Return empth so that the else block should execute.\r\n  }\r\n};\r\n"],"names":["_ref","variant","size","type","disabled","onClick","className","title","text","imageSrc","props","_objectWithoutProperties","_excluded","_jsxs","Button","_objectSpread","children","_jsx","src","alt","style","width","height","marginRight","Loader","show","onHide","footerButtons","Modal","centered","Header","closeButton","Title","Body","Footer","map","btn","index","label","useToast","showToast","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","pauseOnFocusLoss","draggable","theme","transition","Bounce","otherOptions","toast","showSuccessToast","options","arguments","length","undefined","showErrorToast","showInfoToast","showWarningToast","fileTypes","multiple","onUpload","onReset","files","setFiles","useState","handleClearFiles","concat","onDragOver","event","preventDefault","stopPropagation","FileUploader","handleChange","selectedFiles","fileArray","name","types","hoverTitle","file","display","alignItems","background","border","cursor","color","opacity","validateFile","collabSpaceTitles","Promise","resolve","reject","console","log","Array","isArray","error","errors","headers","reader","FileReader","readAsBinaryString","onload","e","workbook","XLSX","target","result","sheetName","SheetNames","worksheet","Sheets","sheet_to_json","header","sheetData","defval","fileHeaders","Object","keys","matchedOperation","key","value","entries","config","every","includes","expectedHeaders","mandatoryAttributes","missingHeaders","filter","join","validationErrors","forEach","row","field","toString","trim","push","userCollabSpace","onerror","selectedValue","onChange","Form","Select","defaultLabel","list","option","attrIndex","Alert","groupedErrors","Map","rowMatch","match","columnMatch","rowNum","columnName","errorMsg","split","has","set","get","errorMessage","_Fragment","ReusableAlert","Table","responsive","bordered","from","_ref2","errorDetails","_ref3","_ref4","colSpan","CustomModal","ErrorPopup","onConfirm","columnHeaders","handleCheckboxChange","checkedItems","handleSelectChange","selectedAttributes","mappedAttributes","allNLSValues","dropdownOptions","isMandatory","hasNLS","warn","hasMatchingNLS","CustomSelect","attr","backendName","uiLabel","useMassUpload","setMappedAttributes","ENOVIA_BASE_URL","process","useEffect","async","_metadataResponse$out","_metadataResponse$out2","_metadataResponse$out3","_attributeResponse$ou","_attributeResponse$ou2","_attributeResponse$ou3","_attributeResponse$ou4","_attributeResponse$ou5","fetchCsrfToken","MSG_FETCH_CSRF_HEADERS_FAILED","metadataResponse","callEnoviaWebService","output","Error","member","objectId","id","attributeResponse","busIDs","groupData","results","item","nls","mappedData","deploymentExtension","fetchColumnMapping","setCheckedItems","setSelectedAttributes","filterMappedAttributes","setfilterMappedAttributes","StaticTable","MappedList","MassUpload","collabTitles","setCollabTitles","modalShow","setModalShow","errorModalShow","setErrorModalShow","showContentErrors","setShowContentErrors","showSpreadsheetModal","setShowSpreadsheetModal","isValidating","setIsValidating","operationChoice","setOperationChoice","setErrors","setColumnHeaders","setMandatoryAttributes","globalCollabSpaceTitles","React","submitDisabled","manageSpreadsheetDisabled","isFileUploadDisabled","Stack","gap","direction","Group","controlId","Control","CustomButton","handleDownloadTemplate","url","MSG_DROPDOWN_NOT_SELECTED","window","open","downloadTemplate","FileUpload","validationResult","errorResponse","responseErrors","responseHeaders","responseMandatoryAttributes","handleReset","selectElement","document","querySelector","Check","handleOpenSpreadsheetModal","ContentErrorsModal","ConfirmationModal","handleConfirmSubmit","alert","ColumnMappingModal","root","widget","hasOnLoadRun","addEvent","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","body","getElementById","createElement","appendChild","ReactDOM","render","Provider","store","ToastContainer","start","securityContext1","getValue","WAFData","loadWAFData","csrfURL","response","authenticatedRequest","method","onComplete","onFailure","csrfToken","csrf","csrfValue","securityContextHeader","securityContextValue"],"sourceRoot":""}