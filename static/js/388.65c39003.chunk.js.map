{"version":3,"file":"static/js/388.65c39003.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","hooks/useToast.js","components/FileUploader/FileUploader.jsx","components/Modal/customModal.jsx","pages/mass-upload/massUpload.jsx","massuUploadIndex.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CustomButton = ({\r\n  variant = \"primary\",\r\n  size = \"md\",\r\n  type = \"button\",\r\n  disabled = false,\r\n  onClick,\r\n  className = \"\",\r\n  title,\r\n  text,\r\n  imageSrc,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      size={size}\r\n      type={type}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      className={className}\r\n      title={title}\r\n      {...props}\r\n    >\r\n      {imageSrc && (\r\n        <img\r\n          src={imageSrc}\r\n          alt={text}\r\n          style={{ width: \"20px\", height: \"20px\", marginRight: \"5px\" }}\r\n        />\r\n      )}{\" \"}\r\n      {/* Render image if provided */}\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nCustomButton.propTypes = {\r\n  variant: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n  imageSrc: PropTypes.string, // PropType for image source\r\n};\r\n\r\nexport default CustomButton;\r\n","// hooks/useToast.js\r\nimport { toast } from \"react-toastify\";\r\nimport { Bounce } from \"react-toastify\";\r\n\r\nconst useToast = () => {\r\n  const showToast = ({\r\n    message,\r\n    type = \"default\",\r\n    position = \"top-right\",\r\n    autoClose = 2000,\r\n    hideProgressBar = false,\r\n    closeOnClick = true,\r\n    pauseOnHover = false,\r\n    pauseOnFocusLoss= false,\r\n    draggable = true,\r\n    theme = \"light\",\r\n    transition = Bounce,\r\n    ...otherOptions\r\n  }) => {\r\n    const toastFunction = toast[type] || toast;\r\n\r\n    toastFunction(message, {\r\n      position,\r\n      autoClose,\r\n      hideProgressBar,\r\n      closeOnClick,\r\n      pauseOnHover,\r\n      draggable,\r\n      theme,\r\n      transition,\r\n      ...otherOptions,\r\n    });\r\n  };\r\n\r\n  const showSuccessToast = (message, options = {}) => {\r\n    showToast({ message, type: \"success\", ...options });\r\n  };\r\n\r\n  const showErrorToast = (message, options = {}) => {\r\n    showToast({ message, type: \"error\", ...options });\r\n  };\r\n\r\n  const showInfoToast = (message, options = {}) => {\r\n    showToast({ message, type: \"info\", ...options });\r\n  };\r\n\r\n  const showWarningToast = (message, options = {}) => {\r\n    showToast({ message, type: \"warn\", ...options });\r\n  };\r\n\r\n  return { showToast, showSuccessToast, showErrorToast, showInfoToast, showWarningToast };\r\n};\r\n\r\nexport default useToast;","import React, { useState } from \"react\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\n\r\nconst FileUpload = ({\r\n  fileTypes = [\"JPEG\", \"PNG\", \"GIF\", \"XLSX\", \"CSV\"],\r\n  multiple = true,\r\n  onUpload,\r\n}) => {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const handleChange = (selectedFiles) => {\r\n    const fileArray = multiple ? [...selectedFiles] : [selectedFiles];\r\n    setFiles(fileArray);\r\n\r\n    // Callback function to send files to parent component\r\n    if (onUpload) {\r\n      onUpload(fileArray);\r\n    }\r\n  };\r\n\r\n  const handleClearFiles = () => {\r\n    setFiles([]);\r\n    if (onUpload) {\r\n      onUpload([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-upload-container\">\r\n      <h2>Drag & Drop Files</h2>\r\n      <div className=\"upload-area\">\r\n        <FileUploader\r\n          multiple={multiple}\r\n          handleChange={handleChange}\r\n          name=\"file\"\r\n          types={fileTypes}\r\n        />\r\n        <div className=\"file-list\">\r\n          {files.length > 0 ? (\r\n            files.map((file, index) => (\r\n              <div\r\n                key={index}\r\n                style={{ display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                <p style={{ marginRight: \"10px\" }}>📁 {file.name}</p>\r\n                <button\r\n                  onClick={handleClearFiles}\r\n                  style={{\r\n                    background: \"none\",\r\n                    border: \"none\",\r\n                    cursor: \"pointer\",\r\n                    color: \"red\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No files uploaded yet.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst CustomModal = ({ show, onHide, title, children, footerButtons }) => {\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"lg\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title || \"Modal Title\"}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n      <Modal.Footer>\r\n        {footerButtons ? (\r\n          footerButtons.map((btn, index) => (\r\n            <Button\r\n              key={index}\r\n              variant={btn.variant || \"secondary\"}\r\n              onClick={btn.onClick}\r\n            >\r\n              {btn.label}\r\n            </Button>\r\n          ))\r\n        ) : (\r\n          <Button variant=\"secondary\" onClick={onHide}>\r\n            Close\r\n          </Button>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","import React, { useState } from \"react\";\r\nimport * as XLSX from \"xlsx\"; // For reading Excel files\r\nimport \"./Mockup.css\";\r\nimport { Form, Stack } from \"react-bootstrap\";\r\nimport CustomButton from \"../../components/Button/Button\";\r\nimport FileUpload from \"../../components/FileUploader/FileUploader\";\r\nimport CustomModal from \"../../components/Modal/customModal\";\r\nimport { downloadTemplate } from \"../../utils/helpers\";\r\nimport useToast from \"../../hooks/useToast\";\r\n\r\nconst MassUpload = () => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [operationChoice, setOperationChoice] = useState(\"\");\r\n  const [uploadedData, setUploadedData] = useState(null);\r\n  const [errors, setErrors] = useState([]);\r\n  const { showErrorToast } = useToast();\r\n\r\n  // Read XLSX and validate\r\n  const handleFileUpload = async (files) => {\r\n    console.log(\"📂 File selected:\", files);\r\n\r\n    if (files.length === 0) {\r\n      console.log(\"⚠️ No file selected.\");\r\n      return;\r\n    }\r\n\r\n    const file = files[0];\r\n    console.log(\"📄 Reading file:\", file.name);\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = async (e) => {\r\n      console.log(\"✅ File successfully read.\");\r\n\r\n      const data = new Uint8Array(e.target.result);\r\n      const workbook = XLSX.read(data, { type: \"array\" });\r\n\r\n      const sheetName = workbook.SheetNames[0]; // Read first sheet\r\n      console.log(\"📜 Sheet Name:\", sheetName);\r\n\r\n      const sheet = workbook.Sheets[sheetName];\r\n      const jsonData = XLSX.utils.sheet_to_json(sheet); // Convert to JSON\r\n\r\n      console.log(\"📊 Parsed XLSX Data:\", jsonData);\r\n      setUploadedData(jsonData);\r\n\r\n      // Fetch mandatory fields from config.json\r\n      try {\r\n        console.log(\"🔄 Fetching config.json...\");\r\n        const response = await fetch(\"/config.json\");\r\n        const config = await response.json();\r\n        console.log(\"⚙️ Config Data:\", config);\r\n\r\n        const mandatoryFields = config.mandatoryFields;\r\n        console.log(\"📝 Mandatory Fields:\", mandatoryFields);\r\n\r\n        // Validate required fields\r\n        const missingFields = validateData(jsonData, mandatoryFields);\r\n        if (missingFields.length > 0) {\r\n          console.log(\"❌ Missing Fields Found:\", missingFields);\r\n          setErrors(missingFields);\r\n          setModalShow(true);\r\n        } else {\r\n          console.log(\"✅ All required fields are present.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"❌ Error fetching config.json:\", error);\r\n      }\r\n    };\r\n\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  // Validate required fields in XLSX\r\n  const validateData = (data, mandatoryFields) => {\r\n    console.log(\"🔍 Validating uploaded data...\");\r\n    let missingFields = [];\r\n\r\n    data.forEach((row, index) => {\r\n      mandatoryFields.forEach((field) => {\r\n        if (!row[field] || row[field].trim() === \"\") {\r\n          missingFields.push(`Row ${index + 1}: ${field} is missing`);\r\n        }\r\n      });\r\n    });\r\n\r\n    console.log(\"🔎 Validation complete. Missing fields:\", missingFields);\r\n    return missingFields;\r\n  };\r\n\r\n  const handleDownloadTemplate = () => {\r\n    console.log(\"⬇️ Downloading template for operation:\", operationChoice);\r\n    downloadTemplate(showErrorToast)(operationChoice);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stack className=\"mt-3\" gap={4}>\r\n        {/* Choose operation and download template */}\r\n        <Stack direction=\"horizontal\">\r\n          <Form.Select\r\n            aria-label=\"Choose Operations\"\r\n            style={{\r\n              width: \"30%\",\r\n              border: \"1px solid #007bff\",\r\n              borderRadius: \"8px\",\r\n            }}\r\n            onChange={(e) => {\r\n              console.log(\"📌 Selected Operation:\", e.target.value);\r\n              setOperationChoice(e.target.value);\r\n            }}\r\n          >\r\n            <option value=\"\">Choose Operations</option>\r\n            <option value=\"1\">Physical Product/Raw Material</option>\r\n            <option value=\"2\">Physical Product Structure</option>\r\n            <option value=\"3\">Document</option>\r\n            <option value=\"4\">Physical Product-Document</option>\r\n          </Form.Select>\r\n\r\n          <CustomButton\r\n            variant=\"link ms-auto btn-lg\"\r\n            onClick={handleDownloadTemplate}\r\n            text=\"Download Template\"\r\n          />\r\n        </Stack>\r\n\r\n        {/* Drag and drop container */}\r\n        <FileUpload\r\n          fileTypes={[\"XLSX\"]}\r\n          multiple={false}\r\n          onUpload={handleFileUpload}\r\n        />\r\n\r\n        {/* Form-CTA submit */}\r\n        <Stack direction=\"horizontal\">\r\n          <Form.Check type=\"checkbox\" label=\"background\" />\r\n          <CustomButton variant=\"primary ms-auto\" text=\"Submit\" />\r\n        </Stack>\r\n      </Stack>\r\n\r\n      {/* Modal to show missing fields */}\r\n      <CustomModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        title=\"Missing Mandatory Fields\"\r\n      >\r\n        {errors.length > 0 ? (\r\n          <ul>\r\n            {errors.map((error, idx) => (\r\n              <li key={idx} style={{ color: \"red\" }}>\r\n                {error}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No errors found</p>\r\n        )}\r\n      </CustomModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MassUpload;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport \"./styles/variables.css\";\r\nimport MassUpload from \"./pages/mass-upload/massUpload\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <Provider store={store}>\r\n      <MassUpload />\r\n      <ToastContainer />\r\n    </Provider>\r\n\r\n    //  <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  // console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n\r\n"],"names":["_ref","variant","size","type","disabled","onClick","className","title","text","imageSrc","props","_objectWithoutProperties","_excluded","_jsxs","Button","_objectSpread","children","_jsx","src","alt","style","width","height","marginRight","useToast","showToast","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","pauseOnFocusLoss","draggable","theme","transition","Bounce","otherOptions","toast","showSuccessToast","options","arguments","length","undefined","showErrorToast","showInfoToast","showWarningToast","fileTypes","multiple","onUpload","files","setFiles","useState","handleClearFiles","FileUploader","handleChange","selectedFiles","fileArray","name","types","map","file","index","display","alignItems","background","border","cursor","color","marginBottom","show","onHide","footerButtons","Modal","centered","Header","closeButton","Title","Body","Footer","btn","label","MassUpload","modalShow","setModalShow","operationChoice","setOperationChoice","uploadedData","setUploadedData","errors","setErrors","validateData","data","mandatoryFields","console","log","missingFields","forEach","row","field","trim","push","concat","_Fragment","Stack","gap","direction","Form","Select","borderRadius","onChange","e","target","value","CustomButton","handleDownloadTemplate","downloadTemplate","FileUpload","async","reader","FileReader","onload","Uint8Array","result","workbook","XLSX","sheetName","SheetNames","sheet","Sheets","jsonData","sheet_to_json","response","fetch","config","json","error","readAsArrayBuffer","Check","CustomModal","idx","root","window","widget","hasOnLoadRun","addEvent","warn","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","body","querySelector","document","getElementById","createElement","id","appendChild","ReactDOM","render","Provider","store","ToastContainer","start"],"sourceRoot":""}