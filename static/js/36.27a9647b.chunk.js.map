{"version":3,"file":"static/js/36.27a9647b.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/Loader/Loader.js","components/Modal/customModal.jsx","hooks/useToast.js","components/FileUploader/FileUploader.jsx","components/ErrorPopup/ErrorPopup.jsx","hooks/Mass-Upload/useMassUpload.js","components/bootsrap-table/Table.jsx","pages/mass-upload/mappedList.jsx","pages/mass-upload/validateFile.js","pages/mass-upload/massUpload.jsx","utils/downloadTemplate.js","massuUploadIndex.js","services/api/PlantAssignment/fetchCsrfService.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CustomButton = ({\r\n  variant = \"primary\",\r\n  size = \"md\",\r\n  type = \"button\",\r\n  disabled = false,\r\n  onClick,\r\n  className = \"\",\r\n  title,\r\n  text,\r\n  imageSrc,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      size={size}\r\n      type={type}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      className={className}\r\n      title={title}\r\n      {...props}\r\n    >\r\n      {imageSrc && (\r\n        <img\r\n          src={imageSrc}\r\n          alt={text}\r\n          style={{ width: \"20px\", height: \"20px\", marginRight: \"5px\" }}\r\n        />\r\n      )}{\" \"}\r\n      {/* Render image if provided */}\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nCustomButton.propTypes = {\r\n  variant: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n  imageSrc: PropTypes.string, // PropType for image source\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from \"react\";\r\nimport \"./Loader.css\"; // Create a CSS file for custom styles\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst CustomModal = ({ show, onHide, title, children, footerButtons }) => {\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"lg\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title || \"Modal Title\"}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n      <Modal.Footer>\r\n        {footerButtons ? (\r\n          footerButtons.map((btn, index) => (\r\n            <Button\r\n              key={index}\r\n              variant={btn.variant || \"secondary\"}\r\n              onClick={btn.onClick}\r\n            >\r\n              {btn.label}\r\n            </Button>\r\n          ))\r\n        ) : (\r\n          <Button variant=\"secondary\" onClick={onHide}>\r\n            Close\r\n          </Button>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","// hooks/useToast.js\r\nimport { toast } from \"react-toastify\";\r\nimport { Bounce } from \"react-toastify\";\r\n\r\nconst useToast = () => {\r\n  const showToast = ({\r\n    message,\r\n    type = \"default\",\r\n    position = \"top-right\",\r\n    autoClose = 2000,\r\n    hideProgressBar = false,\r\n    closeOnClick = true,\r\n    pauseOnHover = false,\r\n    pauseOnFocusLoss= false,\r\n    draggable = true,\r\n    theme = \"light\",\r\n    transition = Bounce,\r\n    ...otherOptions\r\n  }) => {\r\n    const toastFunction = toast[type] || toast;\r\n\r\n    toastFunction(message, {\r\n      position,\r\n      autoClose,\r\n      hideProgressBar,\r\n      closeOnClick,\r\n      pauseOnHover,\r\n      draggable,\r\n      theme,\r\n      transition,\r\n      ...otherOptions,\r\n    });\r\n  };\r\n\r\n  const showSuccessToast = (message, options = {}) => {\r\n    showToast({ message, type: \"success\", ...options });\r\n  };\r\n\r\n  const showErrorToast = (message, options = {}) => {\r\n    showToast({ message, type: \"error\", ...options });\r\n  };\r\n\r\n  const showInfoToast = (message, options = {}) => {\r\n    showToast({ message, type: \"info\", ...options });\r\n  };\r\n\r\n  const showWarningToast = (message, options = {}) => {\r\n    showToast({ message, type: \"warn\", ...options });\r\n  };\r\n\r\n  return { showToast, showSuccessToast, showErrorToast, showInfoToast, showWarningToast };\r\n};\r\n\r\nexport default useToast;","import React, { useState } from \"react\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport \"./FileUploader.css\";\r\n\r\nconst FileUpload = ({\r\n  fileTypes = [\"JPEG\", \"PNG\", \"GIF\", \"XLSX\", \"CSV\"],\r\n  multiple = true,\r\n  onUpload,\r\n  onReset,\r\n}) => {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const handleChange = (selectedFiles) => {\r\n    const fileArray = multiple ? [...selectedFiles] : [selectedFiles];\r\n    setFiles(fileArray);\r\n\r\n    // Callback function to send files to parent component\r\n    if (onUpload) {\r\n      onUpload(fileArray);\r\n    }\r\n  };\r\n\r\n  const handleClearFiles = () => {\r\n    setFiles([]);\r\n    if (onUpload) {\r\n      onUpload([]);\r\n    }\r\n    // Call the reset function to clear all states\r\n    if (onReset) {\r\n      onReset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-upload-container\">\r\n      <h2>Drag & Drop Files</h2>\r\n      <div className=\"upload-area\">\r\n        <FileUploader\r\n          multiple={multiple}\r\n          handleChange={handleChange}\r\n          name=\"file\"\r\n          types={fileTypes}\r\n        />\r\n        <div className=\"file-list\">\r\n          {files.length > 0 ? (\r\n            files.map((file, index) => (\r\n              <div className=\"mb-4\"\r\n                key={index}\r\n                style={{ display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                <p className=\"me-2 mb-0\">📁 {file.name}</p>\r\n                <button\r\n                  onClick={handleClearFiles}\r\n                  style={{\r\n                    background: \"none\",\r\n                    border: \"none\",\r\n                    cursor: \"pointer\",\r\n                    color: \"red\",\r\n                  }}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No files uploaded yet.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst ErrorPopup = ({ errors }) => {\r\n  console.log(\"Errors in ErrorPopup:\", errors);\r\n  return (\r\n    <>\r\n      <Alert variant=\"danger\" className=\"text-left-align  text-sm-start mb-3\">\r\n        <strong>Note:</strong> Below reports show only uploaded spreadsheet\r\n        error rows. To resolve below issues, do the required changes in the\r\n        spreadsheet and re-import.\r\n      </Alert>\r\n      <div className=\"table-responsive\">\r\n        <Table striped bordered hover>\r\n          <thead className=\"table-light\">\r\n            <tr>\r\n              <th>Row Number</th>\r\n              <th>Error Description</th>\r\n              <th>Column Name </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {errors.length > 0 ? (\r\n              errors.map((error, index) => {\r\n                // Extract row number if present in error message\r\n                const rowMatch = error.match(/Row (\\d+):/);\r\n                const rowNum = rowMatch ? rowMatch[1] : \"-\";\r\n\r\n                // Extract column name from error message\r\n                const columnMatch = error.match(/\"([^\"]*)\" is required/);\r\n                const columnName = columnMatch ? columnMatch[1] : \"-\";\r\n                const errorMsg = rowMatch ? error.split(\": \")[1] : error;\r\n\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{rowNum}</td>\r\n                    <td>{errorMsg}</td>\r\n                    <td>{columnName}</td>\r\n                  </tr>\r\n                );\r\n              })\r\n            ) : (\r\n              <tr>\r\n                <td colSpan={2} className=\"text-center\">\r\n                  No Errors Found\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorPopup;\r\n","import { MSG_FETCH_CSRF_HEADERS_FAILED } from \"../../utils/toastMessages\";\r\nimport useToast from \"../useToast\";\r\nimport { fetchCsrfToken } from \"../../services/api/PlantAssignment/fetchCsrfService\";\r\nimport { callEnoviaWebService, fetchData } from \"../../utils/helpers\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useMassUpload = () => {\r\n  const { showErrorToast } = useToast();\r\n  const [mappedAttributes, setMappedAttributes] = useState([]);\r\n\r\n  // Function to Fetch Spreadsheet Column Mapping\r\n  const fetchColumnMapping = async () => {\r\n    try {\r\n      console.log(\"Fetching column mapping...\");\r\n\r\n      // Get CSRF Headers\r\n      const headers = await fetchCsrfToken();\r\n      if (!headers) {\r\n        showErrorToast(MSG_FETCH_CSRF_HEADERS_FAILED);\r\n        return;\r\n      }\r\n\r\n      // 🔹 Step 1: Call API 1 (GET) to Fetch Metadata\r\n      const metadataResponse = await callEnoviaWebService(\r\n        \"GET\",\r\n        \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dseng/dseng:EngItem/search?%24top=1\",\r\n        \"\",\r\n        headers\r\n      );\r\n\r\n      if (!metadataResponse || !metadataResponse.output) {\r\n        throw new Error(\"Failed to fetch metadata.\");\r\n      }\r\n      console.log(\"Metadata Member:\", metadataResponse.output.member);\r\n\r\n      const objectId = metadataResponse.output?.member?.[0]?.id;\r\n      if (!objectId) {\r\n        throw new Error(\"No object ID found in metadata.\");\r\n      }\r\n\r\n      console.log(\"Extracted Object ID:\", objectId);\r\n\r\n      // 🔹 Step 2: Call API 2 (POST) to Fetch Attributes\r\n      const attributeResponse = await callEnoviaWebService(\r\n        \"POST\",\r\n        \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/collabServices/attributes/op/read?tenant=OI000186152&xrequestedwith=xmlhttprequest\",\r\n        {\r\n          busIDs: [objectId],\r\n        },\r\n        headers\r\n      );\r\n\r\n      if (!attributeResponse || !attributeResponse.output) {\r\n        throw new Error(\"Failed to fetch attribute data.\");\r\n      }\r\n      console.log(\"Attribute Response:\", attributeResponse.output);\r\n\r\n      // 🔹 Step 3: Extract & Map Relevant Attributes\r\n      const relevantAttributes =\r\n        attributeResponse.output.results?.[0]?.groupData?.filter(\r\n          (attr) => attr.deploymentExtension === true\r\n        ) || [];\r\n\r\n      const mappedData = relevantAttributes.map((attr) => ({\r\n        uiLabel: attr.nls, // UI Display Name\r\n        backendName: attr.name, // Backend Name\r\n      }));\r\n\r\n      console.log(\"Mapped Attributes:\", mappedData);\r\n      setMappedAttributes(mappedData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching column mapping:\", error);\r\n      showErrorToast(error.message || \"Error fetching column mapping.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchColumnMapping();\r\n  }, []);\r\n\r\n  return { mappedAttributes };\r\n};\r\n\r\nexport default useMassUpload;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nconst StaticTable = ({\r\n  data,\r\n  handleCheckboxChange,\r\n  checkedItems,\r\n  handleSelectChange,\r\n  selectedAttributes,\r\n  mappedAttributes, // Passed mapped attributes\r\n}) => {\r\n  console.log(\"StaticTable Data prop:\", data);\r\n  console.log(\"Mapped Attributes prop:\", mappedAttributes);\r\n\r\n  return (\r\n    <Table bordered className=\"table-light\">\r\n      <thead>\r\n        <tr>\r\n          <th></th>\r\n          <th>Column Name</th>\r\n          <th>Attribute Name</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((row, index) => (\r\n          <tr key={index}>\r\n            <td>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={checkedItems[index] || false}\r\n                onChange={() => handleCheckboxChange(index)}\r\n              />\r\n            </td>\r\n            <td>{row.columnName}</td>\r\n            <td>\r\n              <select\r\n                className=\"form-select\"\r\n                value={selectedAttributes[index] || row.attributeName}\r\n                onChange={(e) => handleSelectChange(index, e.target.value)}\r\n              >\r\n                <option value={row.attributeName}>{row.attributeName}</option>\r\n                {mappedAttributes.map((attr, attrIndex) => (\r\n                  <option key={attrIndex} value={attr.backendName}>\r\n                    {attr.uiLabel} {/* Display UI Label */}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default StaticTable;\r\n","import React, { useState } from \"react\"; // Corrected import for useState\r\nimport StaticTable from \"../../components/bootsrap-table/Table\";\r\nimport useMassUpload from \"../../hooks/Mass-Upload/useMassUpload\";\r\n\r\n// Define columns for StaticTable based on DataTable's structure\r\nconst columns = [\"\", \"Column Name\", \"Attribute Name\"]; // Headers as in DataTable\r\n\r\nconst MappedList = () => {\r\n  const { mappedAttributes } = useMassUpload();\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [selectedAttributes, setSelectedAttributes] = useState({});\r\n  const handleCheckboxChange = (index) => {\r\n    setCheckedItems({ ...checkedItems, [index]: !checkedItems[index] });\r\n  };\r\n  const handleSelectChange = (index, selectedValue) => {\r\n    setSelectedAttributes({ ...selectedAttributes, [index]: selectedValue });\r\n  };\r\n\r\n\r\n  return (\r\n    <StaticTable\r\n        columns={columns}\r\n        data={mappedAttributes} // Use dynamic data from API\r\n        handleCheckboxChange={handleCheckboxChange}\r\n        checkedItems={checkedItems}\r\n        handleSelectChange={handleSelectChange}\r\n        selectedAttributes={selectedAttributes}\r\n        mappedAttributes={mappedAttributes} // Pass mapped attributes\r\n    />\r\n  );\r\n};\r\n\r\nexport default MappedList;\r\n","import * as XLSX from \"xlsx\";\r\nimport config from \"./config.json\";\r\n\r\nconst validateFile = (file) => {\r\n  return new Promise((resolve, reject) => {\r\n    console.log(\"Starting file validation for:\", file.name);\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsBinaryString(file);\r\n\r\n    reader.onload = (e) => {\r\n      console.log(\"File successfully read. Parsing...\");\r\n\r\n      const workbook = XLSX.read(e.target.result, { type: \"binary\" });\r\n      const sheetName = workbook.SheetNames[0];\r\n      console.log(\"Detected sheet name:\", sheetName);\r\n\r\n      const worksheet = workbook.Sheets[sheetName];\r\n\r\n      const headers = XLSX.utils.sheet_to_json(worksheet, { header: 1 })[0];\r\n      console.log(\"Extracted headers:\", headers);\r\n\r\n      if (!headers || headers.length === 0) {\r\n        console.error(\"❌ No headers found in the file.\");\r\n        reject([\"The uploaded file has no content or is empty.\"]);\r\n        return;\r\n      }\r\n\r\n      const sheetData = XLSX.utils.sheet_to_json(worksheet, { defval: \"\" });\r\n      console.log(\"Extracted sheet data:\", sheetData);\r\n\r\n      if (sheetData.length === 0) {\r\n        console.error(\"❌ No row data found. Only headers exist.\");\r\n        reject([\r\n          \"The uploaded file contains only headers but no data. Please add at least one row.\",\r\n        ]);\r\n        return;\r\n      }\r\n\r\n      const fileHeaders = Object.keys(sheetData[0]);\r\n      console.log(\"Parsed file headers:\", fileHeaders);\r\n\r\n      let matchedOperation = null;\r\n      for (const [key, value] of Object.entries(config.MassUpload)) {\r\n        if (\r\n          value.fileHeaders.every((header) => fileHeaders.includes(header))\r\n        ) {\r\n          matchedOperation = key;\r\n          console.log(\"Matched operation:\", matchedOperation);\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!matchedOperation) {\r\n        console.error(\"❌ No matching operation found for given headers.\");\r\n        reject([\"File headers do not match any expected template.\"]);\r\n        return;\r\n      }\r\n\r\n      const expectedHeaders = config.MassUpload[matchedOperation].fileHeaders;\r\n      console.log(\"Expected Headers:\", expectedHeaders);\r\n      const mandatoryAttributes =\r\n        config.MassUpload[matchedOperation].mandatoryAttributes;\r\n      console.log(\"Mandatory Attributes:\", mandatoryAttributes);\r\n\r\n      const missingHeaders = expectedHeaders.filter(\r\n        (header) => !fileHeaders.includes(header)\r\n      );\r\n      if (missingHeaders.length > 0) {\r\n        console.error(\"❌ Missing headers:\", missingHeaders);\r\n        reject([`Missing required headers: ${missingHeaders.join(\", \")}`]);\r\n        return;\r\n      }\r\n\r\n      const validationErrors = [];\r\n      sheetData.forEach((row, index) => {\r\n        mandatoryAttributes.forEach((field) => {\r\n          if (!row[field] || row[field].toString().trim() === \"\") {\r\n            validationErrors.push(\r\n              `Row ${index + 2}: \"${field}\" is required but is empty.`\r\n            );\r\n          }\r\n        });\r\n      });\r\n\r\n      if (validationErrors.length > 0) {\r\n        console.error(\"❌ Validation errors found:\", validationErrors);\r\n        reject(validationErrors);\r\n      } else {\r\n        console.log(\"✅ File validation successful. No errors found.\");\r\n        resolve();\r\n      }\r\n    };\r\n\r\n    reader.onerror = () => {\r\n      console.error(\"❌ Error reading the file.\");\r\n      reject([\"File reading failed.\"]);\r\n    };\r\n  });\r\n};\r\n\r\nexport default validateFile;","import React, { useState } from \"react\";\r\nimport \"./Mockup.css\";\r\nimport { Form, Stack, Spinner, Alert, Table } from \"react-bootstrap\";\r\nimport CustomButton from \"../../components/Button/Button\";\r\nimport FileUpload from \"../../components/FileUploader/FileUploader\";\r\nimport CustomModal from \"../../components/Modal/customModal\";\r\nimport { downloadTemplate } from \"../../utils/downloadTemplate\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport ErrorPopup from \"../../components/ErrorPopup/ErrorPopup\";\r\nimport useMassUpload from \"../../hooks/Mass-Upload/useMassUpload\";\r\nimport MappedList from \"./mappedList\";\r\nimport validateFile from \"./validateFile\";\r\n\r\nconst MassUpload = () => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [errorModalShow, setErrorModalShow] = useState(false);\r\n  const [showContentErrors, setShowContentErrors] = useState(false);\r\n  const [showSpreadsheetModal, setShowSpreadsheetModal] = useState(false); // New state for spreadsheet modal\r\n  const { showErrorToast, showSuccessToast } = useToast();\r\n  const [isValidating, setIsValidating] = useState(false);\r\n  const [operationChoice, setOperationChoice] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const handleFileUpload = (files) => {\r\n    if (files.length === 0) return;\r\n    setIsValidating(true);\r\n    validateFile(files[0])\r\n      .then(() => {\r\n        console.log(\"Validation successful (inside .then)\");\r\n        setErrors([]);\r\n        setIsValidating(false);\r\n        showSuccessToast(\" No Error File validated successfully!\"); // Show success toast\r\n      })\r\n      .catch((validationErrors) => {\r\n        console.log(\"Validation failed (inside .catch\", validationErrors);\r\n        setErrors(validationErrors);\r\n        setIsValidating(false);\r\n        setErrorModalShow(true);\r\n      });\r\n  };\r\n\r\n  const handleDownloadTemplate = () => {\r\n    downloadTemplate(showErrorToast)(operationChoice);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    // Reset all states to their initial values\r\n    setModalShow(false);\r\n    setErrorModalShow(false);\r\n    setShowContentErrors(false);\r\n    setShowSpreadsheetModal(false); // Also reset the spreadsheet modal state\r\n    setIsValidating(false);\r\n    setOperationChoice(\"\");\r\n    setErrors([]);\r\n\r\n    // Reset the dropdown\r\n    const selectElement = document.querySelector(\r\n      'select[aria-label=\"Choose Operations\"]'\r\n    );\r\n    if (selectElement) {\r\n      selectElement.value = \"\";\r\n    }\r\n\r\n    // Show toast message\r\n    showSuccessToast(\"Widget reset successfully!\");\r\n  };\r\n\r\n  const handleOpenSpreadsheetModal = () => {\r\n    setShowContentErrors(false); // Close content errors modal\r\n    setShowSpreadsheetModal(true); // Open spreadsheet modal\r\n  };\r\n\r\n  console.log(\"Operation Choice:\", errors);\r\n\r\n  return (\r\n    <>\r\n      <Stack className=\"mt-3\" gap={4}>\r\n        {/* Choose operation and download template */}\r\n        <Stack direction=\"horizontal\">\r\n          <Form.Select\r\n            aria-label=\"Choose Operations\"\r\n            style={{\r\n              fontSize: \"11px\",\r\n              width: \"30%\",\r\n              border: \"1px solid #007bff\",\r\n              outline: \"none\",\r\n              borderRadius: \"8px\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n            onChange={(e) => setOperationChoice(e.target.value)}\r\n          >\r\n            <option value=\"\">Choose Operations</option>\r\n            <option value=\"1\">Physical Product/Raw Material</option>\r\n            <option value=\"2\">Physical Product Structure</option>\r\n            <option value=\"3\">Document</option>\r\n            <option value=\"4\">Physical Product-Document</option>\r\n          </Form.Select>\r\n          {/* Conditionally render multiple file input for Document type */} \r\n          <div className=\"p-2 ms-auto\">\r\n            {operationChoice === \"3\" && (\r\n              <Form.Group controlId=\"formFileMultiple\">\r\n                <Form.Control type=\"file\" multiple />\r\n              </Form.Group>\r\n            )}\r\n          </div>\r\n          <div className=\"p-2\">\r\n            <CustomButton\r\n              variant=\"link ms-auto \"\r\n              onClick={handleDownloadTemplate}\r\n              text=\"Download Template\"\r\n            />\r\n          </div>\r\n        </Stack>\r\n\r\n        {/* Drag and Drop File Upload */}\r\n        <FileUpload\r\n          fileTypes={[\"XLSX\"]}\r\n          multiple={false}\r\n          onUpload={handleFileUpload}\r\n          onReset={handleReset}\r\n        />\r\n\r\n        {/* Show loader while validating */}\r\n        {isValidating && <Loader />}\r\n\r\n        {/* Submit Button and Content Error Button */}\r\n        <Stack direction=\"horizontal\" gap={2}>\r\n          <Form.Check type=\"checkbox\" label=\"Background\" />\r\n          <div className=\"ms-auto d-flex gap-5\">\r\n            {errors.length > 0 && (\r\n              <CustomButton\r\n                variant=\"danger\"\r\n                onClick={() => setShowContentErrors(true)}\r\n                text={`Content Errors (${errors.length})`}\r\n              />\r\n            )}\r\n\r\n            <CustomButton\r\n              variant=\"primary\"\r\n              onClick={() => setModalShow(true)}\r\n              text=\"Submit\"\r\n            />\r\n          </div>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      {/* Content Errors Modal */}\r\n      <CustomModal\r\n        show={showContentErrors}\r\n        onHide={() => setShowContentErrors(false)}\r\n        title=\"Content Errors\"\r\n        footerButtons={[\r\n          {\r\n            label: \"Manage Spreadsheet Columns\",\r\n            variant: \"info\",\r\n            onClick: handleOpenSpreadsheetModal, // open spreadsheet modal\r\n          },\r\n          {\r\n            label: \"Close\",\r\n            variant: \"danger\",\r\n            onClick: () => setShowContentErrors(false),\r\n          },\r\n        ]}\r\n      >\r\n        <ErrorPopup errors={errors} />\r\n      </CustomModal>\r\n\r\n      {/* Confirmation Modal */}\r\n      <CustomModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        title=\"Custom Modal Title\"\r\n        footerButtons={[\r\n          {\r\n            label: \"Cancel\",\r\n            variant: \"danger\",\r\n            onClick: () => setModalShow(false),\r\n          },\r\n          {\r\n            label: \"Confirm\",\r\n            variant: \"success\",\r\n            onClick: () => alert(\"Confirmed!\"),\r\n          },\r\n        ]}\r\n      >\r\n        <p>This is a reusable modal component with dynamic content.</p>\r\n      </CustomModal>\r\n\r\n      {/* Column Mapping */}\r\n      <CustomModal\r\n        show={showSpreadsheetModal} // Control visibility with showSpreadsheetModal\r\n        onHide={() => setShowSpreadsheetModal(false)} // Hide the modal\r\n        title=\"Manage Spreadshet Column\"\r\n        footerButtons={[\r\n          {\r\n            label: \"Ok\",\r\n            variant: \"primary\",\r\n            onClick: () => setShowSpreadsheetModal(false), // close spreadsheet modal\r\n          },\r\n          {\r\n            label: \"Cancel\",\r\n            variant: \"danger\",\r\n            onClick: () => setShowSpreadsheetModal(false), // close spreadsheet modal\r\n          },\r\n        ]}\r\n      >\r\n        <p>\r\n          All column(s) of uploaded Spreadsheet are mapped to valid Attribute\r\n          Name. All mandatory Attribute Name is mapped to uploaded Spreadsheet\r\n          Column Name\r\n        </p>\r\n        <MappedList />\r\n      </CustomModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MassUpload;\r\n","import { MSG_DROPDOWN_NOT_SELECTED } from \"./toastMessages\";\r\n\r\nexport const downloadTemplate = (showErrorToast) => (operationChoice) => {\r\n  let url = \"\";\r\n  switch (operationChoice) {\r\n    case \"1\": // Physical Product/Raw Material\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProductSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"2\": // Physical Product Structure\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProductStructureSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"3\": // Document\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/DocumentSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"4\": // Physical Product-Document\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProduct-DocumentSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    default:\r\n      showErrorToast(MSG_DROPDOWN_NOT_SELECTED);\r\n      return;\r\n  }\r\n  window.open(url, \"_blank\");\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport \"./styles/variables.css\";\r\nimport MassUpload from \"./pages/mass-upload/massUpload\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <Provider store={store}>\r\n      <MassUpload />\r\n      <ToastContainer />\r\n    </Provider>\r\n\r\n    //  <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  // console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n\r\n","import { loadWAFData } from \"../../../utils/helpers\";\r\n\r\nexport const fetchCsrfToken = async () => {\r\n  try {\r\n    let securityContext1 = window.widget.getValue(\"Credentials\");\r\n    const WAFData = await loadWAFData();\r\n    console.log(\"Security Context is:\", securityContext1);\r\n    const csrfURL = process.env.REACT_APP_CSRF_URL;\r\n\r\n    const response = await new Promise((resolve, reject) => {\r\n      WAFData.authenticatedRequest(csrfURL, {\r\n        method: \"GET\",\r\n        type: \"json\",\r\n        onComplete: resolve,\r\n        onFailure: reject,\r\n      });\r\n    });\r\n\r\n    const csrfToken = response.csrf.name;\r\n    const csrfValue = response.csrf.value;\r\n    const securityContextHeader = \"SecurityContext\";\r\n    const securityContextValue = securityContext1;\r\n\r\n    const headers = {\r\n      [csrfToken]: csrfValue,\r\n      [securityContextHeader]: securityContextValue,\r\n    };\r\n    return headers;\r\n  } catch (error) {\r\n    console.error(\"[CSRF] Failed to fetch token:\", error);\r\n    return; // Return empth so that the else block should execute.\r\n  }\r\n};\r\n"],"names":["_ref","variant","size","type","disabled","onClick","className","title","text","imageSrc","props","_objectWithoutProperties","_excluded","_jsxs","Button","_objectSpread","children","_jsx","src","alt","style","width","height","marginRight","Loader","show","onHide","footerButtons","Modal","centered","Header","closeButton","Title","Body","Footer","map","btn","index","label","useToast","showToast","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","pauseOnFocusLoss","draggable","theme","transition","Bounce","otherOptions","toast","showSuccessToast","options","arguments","length","undefined","showErrorToast","showInfoToast","showWarningToast","fileTypes","multiple","onUpload","onReset","files","setFiles","useState","handleClearFiles","FileUploader","handleChange","selectedFiles","fileArray","name","types","file","display","alignItems","background","border","cursor","color","errors","console","log","_Fragment","Alert","Table","striped","bordered","hover","error","rowMatch","match","rowNum","columnMatch","columnName","errorMsg","split","colSpan","useMassUpload","mappedAttributes","setMappedAttributes","useEffect","async","_metadataResponse$out","_metadataResponse$out2","_metadataResponse$out3","_attributeResponse$ou","_attributeResponse$ou2","_attributeResponse$ou3","headers","fetchCsrfToken","MSG_FETCH_CSRF_HEADERS_FAILED","metadataResponse","callEnoviaWebService","output","Error","member","objectId","id","attributeResponse","busIDs","mappedData","results","groupData","filter","attr","deploymentExtension","uiLabel","nls","backendName","fetchColumnMapping","data","handleCheckboxChange","checkedItems","handleSelectChange","selectedAttributes","row","checked","onChange","value","attributeName","e","target","attrIndex","columns","MappedList","setCheckedItems","setSelectedAttributes","StaticTable","selectedValue","Promise","resolve","reject","reader","FileReader","readAsBinaryString","onload","workbook","XLSX","result","sheetName","SheetNames","worksheet","Sheets","sheet_to_json","header","sheetData","defval","fileHeaders","Object","keys","matchedOperation","key","entries","config","every","includes","expectedHeaders","mandatoryAttributes","missingHeaders","concat","join","validationErrors","forEach","field","toString","trim","push","onerror","MassUpload","modalShow","setModalShow","errorModalShow","setErrorModalShow","showContentErrors","setShowContentErrors","showSpreadsheetModal","setShowSpreadsheetModal","isValidating","setIsValidating","operationChoice","setOperationChoice","setErrors","Stack","gap","direction","Form","Select","fontSize","outline","borderRadius","fontWeight","Group","controlId","Control","CustomButton","handleDownloadTemplate","url","MSG_DROPDOWN_NOT_SELECTED","window","open","downloadTemplate","FileUpload","validateFile","then","catch","handleReset","selectElement","document","querySelector","Check","CustomModal","handleOpenSpreadsheetModal","ErrorPopup","alert","root","widget","hasOnLoadRun","addEvent","warn","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","body","getElementById","createElement","appendChild","ReactDOM","render","Provider","store","ToastContainer","start","securityContext1","getValue","WAFData","loadWAFData","csrfURL","process","response","authenticatedRequest","method","onComplete","onFailure","csrfToken","csrf","csrfValue","securityContextHeader","securityContextValue"],"sourceRoot":""}