{"version":3,"file":"static/js/282.b1c91cf4.chunk.js","mappings":"MAyDA,SAASA,EAAcC,EAAOC,EAAQC,GACpC,MAAM,oBACJC,EAAmB,kBACnBC,EAAiB,iBACjBC,EAAgB,gBAChBC,GACEL,EAEEM,EAAS,GA4Cf,OA1CAP,EAAMQ,SAAQ,CAACC,EAAKC,KAClB,MAAMC,EAAiBT,EAAaQ,EAAQ,EAE5C,IASE,GAPAP,EAAoBK,SAASI,IAAW,IAADC,EACtB,QAAXA,EAACJ,EAAIG,UAAM,IAAAC,GAAVA,EAAYC,WAAWC,QAC1BR,EAAOS,KAAK,OAADC,OAAQN,EAAc,OAAAM,OAAML,EAAK,8BAC9C,IAIuB,qBAArBP,GAAgE,aAArBA,EAAiC,CAAC,IAADa,EAC9E,MAAMC,EAA4C,QAA7BD,EAAGT,EAAI,8BAAsB,IAAAS,OAAA,EAA1BA,EAA4BH,OAC/CI,EAEOf,EAAkBgB,SAASD,IACrCZ,EAAOS,KAAK,OAADC,OACFN,EAAc,gEAAAM,OAA+DE,EAAe,MAHrGZ,EAAOS,KAAK,OAADC,OAAQN,EAAc,+CAMrC,CAGA,IAAIU,EAAkB,KAC8B,IAADC,EAAnD,GAAIjB,EAAiBe,SAAS,oBAC5BC,EAAmC,QAApBC,EAAGb,EAAI,qBAAa,IAAAa,OAAA,EAAjBA,EAAmBR,WAAWC,YAC3C,GAAIV,EAAiBe,SAAS,YAAa,CAAC,IAADG,EAChDF,EAAsC,QAAvBE,EAAGd,EAAI,wBAAgB,IAAAc,OAAA,EAApBA,EAAsBT,WAAWC,MACrD,CAEIM,GAAmBf,EAAgBkB,MAAMC,GAAWJ,EAAgBK,WAAWD,MACjFlB,EAAOS,KAAK,OAADC,OACFN,EAAc,OAAAM,OAAMI,EAAe,mDAAAJ,OAAkDX,EAAgBqB,KAAK,OAGvH,CAAE,MAAOC,GACPC,QAAQD,MAAM,oCAADX,OAAqCN,EAAc,KAAKiB,GACrErB,EAAOS,KAAK,OAADC,OAAQN,EAAc,6BAAAM,OAA4BW,EAAME,SACrE,KAGKvB,CACT,CAvGAwB,KAAKC,UAAYC,UACf,IAAKC,EAAEC,OAASD,EAAEC,KAAKA,OAASD,EAAEC,KAAKC,iBAErC,YADAL,KAAKM,YAAY,CAAEC,KAAM,QAASV,MAAO,0BAI3C,MAAM,KAAEO,EAAI,iBAAEC,GAAqBF,EAAEC,KAErC,IACE,MAAMI,EAAa,IACbC,EAAYL,EAAKM,OACvB,IAAIC,EAAgB,EACpB,MAAMC,EAAmB,GAEzBd,QAAQe,IAAI,0BAAD3B,OAA2BuB,EAAS,wBAAAvB,OAAuBsB,IAEtE,IAAK,IAAIM,EAAI,EAAGA,EAAIL,EAAWK,GAAKN,EAAY,CAC9C,MAAMvC,EAAQmC,EAAKW,MAAMD,EAAGE,KAAKC,IAAIH,EAAIN,EAAYC,IAG/CS,EAAclD,EAAcC,EAAOoC,EAAkBS,GAC3DF,EAAiB3B,QAAQiC,GAEzBP,GAAiB1C,EAAMyC,OAGvBV,KAAKM,YAAY,CACfC,KAAM,WACNY,SAAUH,KAAKI,MAAOT,EAAgBF,EAAa,aAI/C,IAAIY,SAASC,GAAYC,WAAWD,EAAS,IACrD,CAEAxB,QAAQe,IAAI,0CAAD3B,OAA2C0B,EAAiBF,OAAM,YAE7EV,KAAKM,YAAY,CACfC,KAAM,WACN/B,OAAQoC,GAEZ,CAAE,MAAOf,GACPC,QAAQD,MAAM,qBAAsBA,GACpCG,KAAKM,YAAY,CACfC,KAAM,QACNV,OAAY,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOE,UAAW,0BAE7B,E","sources":["pages/mass-upload/Webworker.js"],"sourcesContent":["/* eslint-disable no-restricted-globals */\r\n// Note: Web Workers don't have direct access to window object\r\n// Using self instead of window\r\n\r\n// Remove XLSX import as it's not needed in the worker\r\n// import * as XLSX from \"xlsx\";\r\n\r\nself.onmessage = async (e) => {\r\n  if (!e.data || !e.data.data || !e.data.validationConfig) {\r\n    self.postMessage({ type: \"error\", error: \"Invalid data received\" });\r\n    return;\r\n  }\r\n\r\n  const { data, validationConfig } = e.data;\r\n\r\n  try {\r\n    const BATCH_SIZE = 1000;\r\n    const totalRows = data.length;\r\n    let processedRows = 0;\r\n    const validationErrors = [];\r\n\r\n    console.log(`[WebWorker] Processing ${totalRows} rows in batches of ${BATCH_SIZE}`);\r\n\r\n    for (let i = 0; i < totalRows; i += BATCH_SIZE) {\r\n      const batch = data.slice(i, Math.min(i + BATCH_SIZE, totalRows));\r\n\r\n      // Validate batch\r\n      const batchErrors = validateBatch(batch, validationConfig, i);\r\n      validationErrors.push(...batchErrors);\r\n\r\n      processedRows += batch.length;\r\n\r\n      // Report progress\r\n      self.postMessage({\r\n        type: \"progress\",\r\n        progress: Math.round((processedRows / totalRows) * 100),\r\n      });\r\n\r\n      // Allow UI updates between batches\r\n      await new Promise((resolve) => setTimeout(resolve, 0));\r\n    }\r\n\r\n    console.log(`[WebWorker] Validation complete. Found ${validationErrors.length} errors`);\r\n    \r\n    self.postMessage({\r\n      type: \"complete\",\r\n      errors: validationErrors,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"[WebWorker] Error:\", error);\r\n    self.postMessage({\r\n      type: \"error\",\r\n      error: error?.message || \"Unknown error occurred\",\r\n    });\r\n  }\r\n};\r\n\r\nfunction validateBatch(batch, config, startIndex) {\r\n  const {\r\n    mandatoryAttributes,\r\n    collabSpaceTitles,\r\n    matchedOperation,\r\n    invalidPrefixes,\r\n  } = config;\r\n\r\n  const errors = [];\r\n\r\n  batch.forEach((row, index) => {\r\n    const actualRowIndex = startIndex + index + 2; // +2 for header row and 0-based index\r\n\r\n    try {\r\n      // Mandatory fields validation\r\n      mandatoryAttributes.forEach((field) => {\r\n        if (!row[field]?.toString().trim()) {\r\n          errors.push(`Row ${actualRowIndex}: \"${field}\" is required but is empty`);\r\n        }\r\n      });\r\n\r\n      // Collaborative Space validation\r\n      if (matchedOperation === \"Physical Product\" || matchedOperation === \"Document\") {\r\n        const userCollabSpace = row[\"Collaborative Space\"]?.trim();\r\n        if (!userCollabSpace) {\r\n          errors.push(`Row ${actualRowIndex}: \"Collaborative Space\" is missing or empty`);\r\n        } else if (!collabSpaceTitles.includes(userCollabSpace)) {\r\n          errors.push(\r\n            `Row ${actualRowIndex}: You are not allowed to create in \"Collaborative Space -\" (${userCollabSpace})`\r\n          );\r\n        }\r\n      }\r\n\r\n      // EIN/Document validation\r\n      let valueToValidate = null;\r\n      if (matchedOperation.includes(\"Physical Product\")) {\r\n        valueToValidate = row[\"EIN Number\"]?.toString().trim();\r\n      } else if (matchedOperation.includes(\"Document\")) {\r\n        valueToValidate = row[\"Document Name\"]?.toString().trim();\r\n      }\r\n\r\n      if (valueToValidate && invalidPrefixes.some((prefix) => valueToValidate.startsWith(prefix))) {\r\n        errors.push(\r\n          `Row ${actualRowIndex}: \"${valueToValidate}\" has an invalid prefix. Not allowed prefixes: ${invalidPrefixes.join(\", \")}`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(`[WebWorker] Error processing row ${actualRowIndex}:`, error);\r\n      errors.push(`Row ${actualRowIndex}: Error processing row - ${error.message}`);\r\n    }\r\n  });\r\n\r\n  return errors;\r\n}\r\n\r\n// const { override, addWebpackModuleRule } = require('customize-cra');\r\n\r\n// module.exports = override(\r\n//   addWebpackModuleRule({\r\n//     test: /\\.worker\\.js$/,\r\n//     use: { \r\n//       loader: 'worker-loader',\r\n//       options: { \r\n//         filename: '[name].[contenthash].worker.js',\r\n//         publicPath: '/static/js/'\r\n//       }\r\n//     }\r\n//   })\r\n// );\r\n"],"names":["validateBatch","batch","config","startIndex","mandatoryAttributes","collabSpaceTitles","matchedOperation","invalidPrefixes","errors","forEach","row","index","actualRowIndex","field","_row$field","toString","trim","push","concat","_row$CollaborativeSp","userCollabSpace","includes","valueToValidate","_row$EINNumber","_row$DocumentName","some","prefix","startsWith","join","error","console","message","self","onmessage","async","e","data","validationConfig","postMessage","type","BATCH_SIZE","totalRows","length","processedRows","validationErrors","log","i","slice","Math","min","batchErrors","progress","round","Promise","resolve","setTimeout"],"sourceRoot":""}